<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo</title>
      <link href="/2023/09/09/%E6%8A%80%E6%9C%AF/Hexo/"/>
      <url>/2023/09/09/%E6%8A%80%E6%9C%AF/Hexo/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="文件头"><a href="#文件头" class="headerlink" title="文件头"></a>文件头</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 题目</span><br><span class="line">date: 2023-02-22 10:01:06</span><br><span class="line">categories:</span><br><span class="line">- 目录</span><br><span class="line">- 目录</span><br><span class="line">tags:</span><br><span class="line">- 标签</span><br><span class="line"></span><br><span class="line">description: 描述</span><br><span class="line"></span><br><span class="line">top: 10  （置顶模块数字越小排名越前）</span><br><span class="line"></span><br><span class="line">password: 密码   </span><br><span class="line">message: 密码输入框上描述性内容</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">---</span><br></pre></td></tr></table></figure><h1 id="加密系统"><a href="#加密系统" class="headerlink" title="加密系统"></a>加密系统</h1><p>npm install –save hexo-blog-encrypt</p><p>使用：<br>password: smile<br>abstract: Welcome to my blog, enter password to read.<br>message: 密码输入框上描述性内容</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端</title>
      <link href="/2023/08/02/%E6%8A%80%E6%9C%AF/UI/"/>
      <url>/2023/08/02/%E6%8A%80%E6%9C%AF/UI/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="37e25c2fdd8601f75b36566e01cac941c0d6f02a81ed3d6daec0bdd7986eb59c"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">密码访问</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GCN-based document representation for keyphrase generation enhanced by maximizing mutual information</title>
      <link href="/2023/07/08/%E7%A7%91%E7%A0%94/%E8%AE%BA%E6%96%87/GCN-based%20document%20representation%20for%20keyphrase%20generation%20enhanced%20by%20maximizing%20mutual%20information/"/>
      <url>/2023/07/08/%E7%A7%91%E7%A0%94/%E8%AE%BA%E6%96%87/GCN-based%20document%20representation%20for%20keyphrase%20generation%20enhanced%20by%20maximizing%20mutual%20information/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="相关研究"><a href="#相关研究" class="headerlink" title="相关研究"></a>相关研究</h1><h2 id="KE"><a href="#KE" class="headerlink" title="KE"></a>KE</h2><p>模型首先使用预定义的规则或模板来选择一组候选短语。然后，根据监督方法或无监督算法对候选人对其进行重新排序，模型返回前n个短语作为关键短语</p><h1 id="KG"><a href="#KG" class="headerlink" title="KG"></a>KG</h1><p>CopyRNN为例，提出seq2seq<br>一些改进：</p><ul><li>语义覆盖解决关键词重叠（one2set效果不错）</li><li>自适应奖励函数控制关键词生成数量</li></ul><h1 id="出发点"><a href="#出发点" class="headerlink" title="出发点"></a>出发点</h1><h2 id="远距离建模"><a href="#远距离建模" class="headerlink" title="远距离建模"></a>远距离建模</h2><p>对于社交媒体和开放域文本，当前的KG模型很难关注文本的关键部分。纯粹基于RNN的方法可以更好地建模相邻单词之间的依赖关系，但不能很好地建模那些具有距离跨越的依赖关系结构。这些信息的本质是隐性的，是言语交叉的，而不是明确的。</p><h2 id="生成与源文档意思一致的词，而非频率最高的词"><a href="#生成与源文档意思一致的词，而非频率最高的词" class="headerlink" title="生成与源文档意思一致的词，而非频率最高的词"></a>生成与源文档意思一致的词，而非频率最高的词</h2><p>KG任务的另一个关键挑战是确保源和目标关键字之间的一致性，因为它们应该在语义上相互依赖。与基于Seq2Seq的文本摘要类似，KG模型通常通过最大化似然估计（beamsearch）进行训练。由于模型不能确保文档与其相应的关键短语之间的一致性，因此它们倾向于生成与源无关的高频短语。为了解决文档及其生成的关键字之间的一致性问题</p><h2 id="建图"><a href="#建图" class="headerlink" title="建图"></a>建图</h2><p>在这项工作中，我们的目标是通过将由图卷积网络（GCN）获得的依赖信息与上下文信息相结合来解决信息分散的挑战。对于每个文本，我们首先为每个句子构建一个句法图，然后根据预定义的规则构建句子之间的边，得到一个文档级图。图中的每个节点对应一个单独的单词，一对节点之间的边表示它们的依赖关系。在图构建完成后，我们将其输入到一个GCN中，在非局部单词之间传播上下文信息，并捕获文本中的依赖性结构信息。<strong>从直观地看，依赖性信息在提取显著特征中起着重要的作用。</strong>我们推测，将依赖性信息整合到由RNN获得的上下文信息中，可以缓解信息分散的问题。<strong>基于GCN的节点表示被进一步输入到一个预测器网络中，以过滤出噪声词，并为复制机制提供潜在的候选词。</strong></p><blockquote><p>RNNS和GCNS都是必要的，前者提供上下文依赖关系，后者提供远距离&#x2F;语法上的依赖关系</p></blockquote><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul><li>GKG的创新之处在于，它可以建模跨越距离的文本依赖信息，而这是现有的基于RNN的方法无法获得的。</li><li>变分选择网络确定copy和generated各自的概率</li><li>使用mutual information maximization for learning the representations from documents and phrases （互信息最大化学习文档和关键词的表示）</li></ul><h1 id="model结构"><a href="#model结构" class="headerlink" title="model结构"></a>model结构</h1><p>数据采用one2one格式<br>模型首先执行RNN编码器来获取文档和单词的上下文表示。然后，将图编码器应用于文档级图上，预测一个单词是否会被保留，并得到文档的结构特征。最后，RNN解码器以文档表示作为输入，并生成短语。</p><h2 id="Sequence-Encoder"><a href="#Sequence-Encoder" class="headerlink" title="Sequence Encoder"></a>Sequence Encoder</h2><h3 id="词嵌入"><a href="#词嵌入" class="headerlink" title="词嵌入"></a>词嵌入</h3><p>word的embedding+词性POS(低维化)组成$x_i&#x3D;[w_i,d_i]$</p><blockquote><p>词性标注(Part-of-Speech Tagging),HMM<br>Parts-of-speech(也称为词性、词类或句法类别)很有用，因为它们揭示了一个单词及其相邻词的很多信息。知道一个单词是名词还是动词可以告诉我们可能的相邻单词(名词前面有限定词和形容词，动词前面有名词)和句法结构单词(名词通常是名词短语的一部分)，使词性标注成为解析的一个关键方面</p></blockquote><p>然后双向GRU处理，取在t时间步的$c&#x3D;h^s&#x3D;{h_t^s前;h_t^s后}$作为文档的表示。</p><p>Intra-sentence edge: We apply dependency parser such as<br>HanLP to create dependency edges for each input sentence.<br><a href="https://github.com/hankcs/HanLP">https://github.com/hankcs/HanLP</a></p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
          <category> GNNS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> G2S </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pytorch使用Tensorboard</title>
      <link href="/2023/05/04/%E7%A7%91%E7%A0%94/pytorchTensorBoard/"/>
      <url>/2023/05/04/%E7%A7%91%E7%A0%94/pytorchTensorBoard/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install tensorboard</span><br></pre></td></tr></table></figure><h1 id="开启服务"><a href="#开启服务" class="headerlink" title="开启服务"></a>开启服务</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tensorboard --logdir= 日志目录(不需要加引号) --port 端口号</span><br></pre></td></tr></table></figure><h1 id="端口转发"><a href="#端口转发" class="headerlink" title="端口转发"></a>端口转发</h1><p>注意：如果服务器是远程的，还要设置端口转发到本地<br>即：<br>ssh转发指令:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -L 16006:127.0.0.1:6006</span><br></pre></td></tr></table></figure><h1 id="具体使用"><a href="#具体使用" class="headerlink" title="具体使用"></a>具体使用</h1><h2 id="前置工作"><a href="#前置工作" class="headerlink" title="前置工作"></a>前置工作</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter   </span><br><span class="line">writer = SummaryWriter(<span class="string">&#x27;./path/to/log&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="loss-x2F-acc图表的绘制"><a href="#loss-x2F-acc图表的绘制" class="headerlink" title="loss&#x2F;acc图表的绘制"></a>loss&#x2F;acc图表的绘制</h2><p>折线图一般使用scalar绘制</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">writer.add_scalar(tag, scalar_value, global_step=<span class="literal">None</span>, walltime=<span class="literal">None</span>)</span><br><span class="line">tag：图的名字</span><br><span class="line">scalar_vale:纵坐标y值</span><br><span class="line">global_step:横坐标x值</span><br></pre></td></tr></table></figure><h3 id="同一个section显示多个loss"><a href="#同一个section显示多个loss" class="headerlink" title="同一个section显示多个loss"></a>同一个section显示多个loss</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">writer.add_scalar(<span class="string">&#x27;loss/loss1&#x27;</span>, loss1, epoch)</span><br><span class="line">writer.add_scalar(<span class="string">&#x27;loss/loss2&#x27;</span>, loss2, epoch)</span><br><span class="line">writer.add_scalar(<span class="string">&#x27;loss/loss3&#x27;</span>, loss3, epoch)</span><br></pre></td></tr></table></figure><p>官方提供的例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">writer = SummaryWriter()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> n_iter <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">    writer.add_scalar(<span class="string">&#x27;Loss/train&#x27;</span>, np.random.random(), n_iter)</span><br><span class="line">    writer.add_scalar(<span class="string">&#x27;Loss/test&#x27;</span>, np.random.random(), n_iter)</span><br><span class="line">    writer.add_scalar(<span class="string">&#x27;Accuracy/train&#x27;</span>, np.random.random(), n_iter)</span><br><span class="line">    writer.add_scalar(<span class="string">&#x27;Accuracy/test&#x27;</span>, np.random.random(), n_iter)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="同一图内多条曲线"><a href="#同一图内多条曲线" class="headerlink" title="同一图内多条曲线"></a>同一图内多条曲线</h3><p>使用add_scalars实现<br>注意：横坐标必须一致</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line">writer = SummaryWriter()</span><br><span class="line">r = <span class="number">5</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">    writer.add_scalars(<span class="string">&#x27;run_14h&#x27;</span>, &#123;<span class="string">&#x27;xsinx&#x27;</span>:i*np.sin(i/r),</span><br><span class="line">                                    <span class="string">&#x27;xcosx&#x27;</span>:i*np.cos(i/r),</span><br><span class="line">                                    <span class="string">&#x27;tanx&#x27;</span>: np.tan(i/r)&#125;, i)</span><br><span class="line">writer.close()</span><br><span class="line"><span class="comment"># This call adds three values to the same scalar plot with the tag</span></span><br><span class="line"><span class="comment"># &#x27;run_14h&#x27; in TensorBoard&#x27;s scalar section.</span></span><br></pre></td></tr></table></figure><h2 id="模型结构图的绘制"><a href="#模型结构图的绘制" class="headerlink" title="模型结构图的绘制"></a>模型结构图的绘制</h2><p>虽然说这方法能绘制模型结构图，但其实怀疑只能生成结构简单的图，或者是CNN等的图，我试了几次没有成功。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">add_graph(model, input_to_model=<span class="literal">None</span>, verbose=<span class="literal">False</span>, use_strict_trace=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">model (torch.nn.Module) – Model to draw.</span><br><span class="line">input_to_model (torch.Tensor <span class="keyword">or</span> <span class="built_in">list</span> of torch.Tensor) – A variable <span class="keyword">or</span> a <span class="built_in">tuple</span> of variables to be fed.</span><br><span class="line">verbose (<span class="built_in">bool</span>) – Whether to <span class="built_in">print</span> graph structure <span class="keyword">in</span> console.</span><br><span class="line">use_strict_trace (<span class="built_in">bool</span>) – Whether to <span class="keyword">pass</span> keyword argument strict to torch.jit.trace. Pass <span class="literal">False</span> when you want the tracer to record your mutable container types (<span class="built_in">list</span>, <span class="built_in">dict</span>)</span><br></pre></td></tr></table></figure><h2 id="embedding图的绘制"><a href="#embedding图的绘制" class="headerlink" title="embedding图的绘制"></a>embedding图的绘制</h2><p>我是真没想到这个还能画embedding的图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">add_embedding(mat, metadata=<span class="literal">None</span>, label_img=<span class="literal">None</span>, global_step=<span class="literal">None</span>, tag=<span class="string">&#x27;default&#x27;</span>, metadata_header=<span class="literal">None</span>)</span><br><span class="line"></span><br><span class="line">mat (torch.Tensor <span class="keyword">or</span> numpy.ndarray) – A matrix which each row <span class="keyword">is</span> the feature vector of the data point</span><br><span class="line">metadata (<span class="built_in">list</span>) – A <span class="built_in">list</span> of labels, each element will be convert to string</span><br><span class="line">label_img (torch.Tensor) – Images correspond to each data point</span><br><span class="line">global_step (<span class="built_in">int</span>) – Global step value to record</span><br><span class="line">tag (<span class="built_in">str</span>) – Name <span class="keyword">for</span> the embedding</span><br></pre></td></tr></table></figure><p>示例代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> keyword</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line">meta = []</span><br><span class="line"><span class="keyword">while</span> <span class="built_in">len</span>(meta)&lt;<span class="number">100</span>:</span><br><span class="line">    meta = meta+keyword.kwlist <span class="comment"># get some strings</span></span><br><span class="line">meta = meta[:<span class="number">100</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, v <span class="keyword">in</span> <span class="built_in">enumerate</span>(meta):</span><br><span class="line">    meta[i] = v+<span class="built_in">str</span>(i)</span><br><span class="line"></span><br><span class="line">label_img = torch.rand(<span class="number">100</span>, <span class="number">3</span>, <span class="number">10</span>, <span class="number">32</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">    label_img[i]*=i/<span class="number">100.0</span></span><br><span class="line"></span><br><span class="line">writer.add_embedding(torch.randn(<span class="number">100</span>, <span class="number">5</span>), metadata=meta, label_img=label_img)</span><br><span class="line">writer.add_embedding(torch.randn(<span class="number">100</span>, <span class="number">5</span>), label_img=label_img)</span><br><span class="line">writer.add_embedding(torch.randn(<span class="number">100</span>, <span class="number">5</span>), metadata=meta)</span><br></pre></td></tr></table></figure><h2 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续"></a>未完待续</h2><p>后续可能还会有补充</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://pytorch.org/docs/stable/tensorboard.html">pytorch官方文档</a></p>]]></content>
      
      
      <categories>
          
          <category> 科研 </category>
          
          <category> 代码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pytorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《费马大定理：一个困惑了世间智者358年的谜》——西蒙·辛格</title>
      <link href="/2023/05/01/%E8%AF%BB%E4%B9%A6/FermatTheorem/"/>
      <url>/2023/05/01/%E8%AF%BB%E4%B9%A6/FermatTheorem/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>《费马大定理:一个困惑了世间智者358年的谜》是关于一个困惑了世间智者358年的谜题的传奇。书中既有振奋人心的故事讲述方式，也有引人入胜的科学发现的历史。西蒙·辛格讲述了一个英国人，经过数年秘密辛苦的工作，终于解决了最具挑战性的数学问题的艰辛旅程。<br><img src="https://yuhengtech.oss-cn-hangzhou.aliyuncs.com/img/20230501195119.png" alt="20230501195119"></p><h1 id="评价"><a href="#评价" class="headerlink" title="评价"></a>评价</h1><p>艺术的笔触将一些在一般人看来可能是枯燥艰深的数学知识写得通俗易懂、引人入胜而又不失严谨。数学史上的一些伟大英雄栩栩如生地展现在我们面前,358年的数学传承最终凝成了结晶，数学家们也和平常人一样有着自己的命运起伏，我们为谷山志村的高山流水般的友谊兴奋，为天才伽罗瓦英年早逝而感伤，被怀尔斯修正理论的勇气、智慧和耐心所折服，他们不断地经历着失败和成功，而使他们不同凡响名垂史册的则是他们科学上的那种追求卓越、不畏艰险、永不放弃的精神。</p><h1 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h1><h2 id="第一章-“我想我就在这里结束”"><a href="#第一章-“我想我就在这里结束”" class="headerlink" title="第一章 “我想我就在这里结束”"></a>第一章 “我想我就在这里结束”</h2><ol><li><p>任何大学里的数学系在所有的系中都是保密程度最低的，因为那里没有属于专利的发明。数学界为自己能坦率和自由地交流思想而感到自豪。</p></li><li><p>最优秀的一类人则献身于发现生活本身的意义和目的。他设法揭示自然的奥秘。这就是我称之为哲学家的人。虽然没有一个人在各方面都是很有智慧的，但是他能热爱知识，视其为揭开自然界奥秘的钥匙。</p></li><li><p>从音乐的和声到行星的轨道，一切事物中皆藏有数。</p></li><li><p>经典的数学证明的办法是从一系列公理、陈述出发，这些陈述有些可以是假定为真的，有些则是显然真的；然后通过逻辑论证，一步接一步，最后就可能得到某个结论。如果公理是正确的，逻辑也无缺陷，那么得到的结论将是不可否定的。这个结论就是一个定理。<br>数学证明依靠这个逻辑过程，而且一经证明就永远是对的。数学证明是绝对的。为了正确地判断这种证明的价值，应该将它们与比其差一些的同类证明，即科学证明做一比较。在科学中，一个假设被提出来用以解释某一物理现象。如果对物理现象的观察结果与这个假设相符，这就成为这个假设成立的证据。进一步，这个假设应该不仅能描述已知的现象，而且能预言其他现象的结果。可以做实验来测试这个假设的预言能力，如果它再次继续成功，那么就有更多的证据支持这个假设。最终，证据的数量可能达到压倒性的程度，于是这个假设被接受为一个科学理论。</p><blockquote><p>数学之所以是非自然科学科学，即为数学不满足科学的可证伪性</p></blockquote></li><li><p>科学理论的证明永远不可能达到数学定理的证明所具有的绝对程度：它仅仅是根据已得到的证据被认为是非常可能的。所谓的科学证明依赖于观察和理解力，这两者是容易出错的，并且仅仅提供了近似于真理的概念。……科学是按照评判系统来运转的。如果有足够多的证据证明一个理论“摆脱了一切合理的怀疑”，那么这个理论就被认为是对的。在另一方面，数学不依赖于来自容易出错的实验的证据，它立足于不会出错的逻辑。</p><blockquote><p>对物质的基本粒子的探索使得每一代的物理学家被推翻，或者至少是重新推敲他们前辈的理论。近代对构成天地万物的基本材料的研究开始于19世纪初，当时一系列的实验引导约翰·道尔顿（John Dalton）提出万物都是由分离的原子组成的，原子是基本的。在19世纪末，Thomson发现了电子（最早知道的亚原子），于是原子不再是基本的。</p></blockquote></li><li><p>通常，数学问题中一半的困难在于理解这问题本身</p></li></ol><h2 id="第二章-出谜的人"><a href="#第二章-出谜的人" class="headerlink" title="第二章 出谜的人"></a>第二章 出谜的人</h2><ol><li>费马是一个真正的业余学者，一个被埃里克·贝尔称为“业余数学家之王”的人。<br>但是他的才华是如此出众，以至于当朱利安·库利奇（Julian Coolidge）写《业余大数学家的数学》（Mathematics of Great Amateurs）这本书时将费马排除在外，理由是他“那么杰出，他应该算作专业数学家”。</li><li>分析概率的才智应该是我们的遗传构成之一，不过我们的直觉常常误导我们。<blockquote><p>帕斯卡甚至相信他能用他的理论证明信仰上帝是有理由的。他说：“赌徒在押赌时感受到的刺激等于他可能赢得的钱数乘以他获胜的概率。”然后他论证道：永恒的幸福具有无限的价值，由于生活道德高尚而进入天堂的概率不管怎么小肯定是有限的。于是，按照帕斯卡的定义，宗教是一种有无穷刺激的游戏，一个值得参与的游戏，因为无限的奖励乘以一个有限的概率其结果是无穷大。</p></blockquote></li></ol><h2 id="第三章-数学史上暗淡的一页"><a href="#第三章-数学史上暗淡的一页" class="headerlink" title="第三章 数学史上暗淡的一页"></a>第三章 数学史上暗淡的一页</h2><ol><li><p>逻辑是数学家用来使他的思想保持健康有力的保健法。</p></li><li><p>一个天文学家、一个物理学家和一个数学家（据说）正在苏格兰度假。当他们从火车车厢的窗口向外瞭望时，观察到田地中央有一只黑色的羊。“多么有趣，”天文学家评论道，“所有的苏格兰羊都是黑色的！”物理学家对此反驳说：“不，不！某些苏格兰羊是黑色的！”数学家祈求地凝视着天空，然后吟诵起来：“在苏格兰至少存在着一块田地，至少有一只羊，这只羊至少有一侧是黑色的。”</p></li><li><p>(希尔伯特计划)是在那个时代最杰出的人物大卫·希尔伯特领导下进行的。希尔伯特相信，数学中的一切能够而且也应该根据基本的公理加以证明。这样做的结果，最终将是要证明数学体系中的两个最重要的基本要求。首先，数学应该（至少在理论上）<strong>有能力回答每一个问题</strong>——这与对完全性的要求是相同的，这种要求在过去曾迫使数学家创造出像负数和虚数这样的新的数。其次，<strong>数学不应该有不相容性</strong>——那就是说，如果用一种方法证明了某个命题是对的，那么就不可能用另一种方法证明这同一命题是错的。希尔伯特确信，只需承认少数几个公理，就可以回答任何想象得到的数学问题而无须担心会出现矛盾。</p></li><li><p>希尔伯特想要激励数学界来帮助他实现他的建立可信的并且相容的数学体系的梦想——他铭刻在他的墓碑上的雄心壮志： <strong>Wir müssen wissen. Wir werden wissen.  我们必须知道，我们将会知道</strong>。<br>就在这同时，也在为希尔伯特的伟大计划作努力的英国逻辑学家伯特兰·罗素却有了一个毁灭性的发现。尽管遵循着希尔伯特的严格规定，罗素还是碰到了一种不相容性。  </p><blockquote><p>图书管理员发现一个问题：列出所有不将自己列在其中的目录册的那个大目录册是否应该在本身中列出？如果列出的话，那么按照定义，它不应该被列出。然而，如果不列出的话，那么按照定义，它应该被列出。图书管理员处于无论怎么做都不会对的情况。罗素的工作动摇了数学的基础，使数理逻辑的研究处于混乱的状态。逻辑学家们知道潜藏在数学基础中的悖论迟早总会冒头并且引起严重的问题。与希尔伯特和其他逻辑学家一起，罗素开始设法补救这种情形，恢复数学的合理性。</p></blockquote></li><li><p>(哥德尔不完备定理)哥德尔证明了要<strong>想创立一个完全的、相容的数学体系是一件不可能做到的事情</strong>。他的思想可以浓缩为两个命题，即：第一不可判定性定理：<strong>如果公理集合论是相容的，那么存在既不能证明又不能否定的定理</strong>。 第二不可判定性定理：<strong>不存在能证明公理系统是相容的构造性过程</strong>。</p></li><li><p>杰出的数论家安德烈·韦依（AndréWeil）说：<strong>“上帝之存在是因为数学是相容的，而魔王之存在是因为我们不能证明数学是相容的。”</strong></p></li><li><p>数学在科学技术中有它的应用，但这不是驱使数学家们的动力。激励数学家们的是因发现而得到的乐趣，解答某个数学问题的欲望多半是出于好奇，而回报则是因解决了难题而获得的单纯而又巨大的满足感。</p></li><li><p>我认为研究生导师能为学生做的一切就是设法把他推向一个富有成果的方向。</p></li></ol><h2 id="第五章-反证法"><a href="#第五章-反证法" class="headerlink" title="第五章 反证法"></a>第五章 反证法</h2><ol><li>数学家的模式，像画家或诗人的一样，必须是美的；各种思想，像色彩或辞藻一样，必须以和谐的方式组合在一起。美是首要的标准，丑陋的数学不可能永世长存。</li><li>（朗兰兹纲领）20世纪60年代，普林斯顿高等研究院的罗伯特·朗兰兹（Robert Langlands）被谷山-志村猜想所具有的潜力吸引。尽管这个猜想尚未被证明，朗兰兹相信它只不过是一个更为宏伟得多的统一化计划中的一个环节。他确信在所有主要的数学课题之间存在连接的链环，并开始寻找这些统一的链环。几年之后，许多链环开始涌现出来。所有的这些统一化猜想比谷山-志村猜想要弱得多，并且更为不确定，但是它们形成了由存在于许多数学领域之间的假设性联系组成的一个错综复杂的网络。<strong>朗兰兹的梦想是看到这些猜想一个接一个地被证明，最终形成一个宏伟的统一的数学</strong>。<blockquote><p>朗兰兹详述了他未来的计划，并试图说服其他数学家参加到他这个被称为朗兰兹纲领（Langlands programme）的计划之中，齐心协力来证明他的猜想金字塔。似乎没有明确的方法来证明这种不确定的链环，但是如果这个梦想成为现实的话，那么其回报将是巨大无比的：在某个数学领域中无法解答的任何问题，却可以被转换成另一个领域中相应的问题，而在那里有一整套新武器可以用来对付它。如果仍然难以找到解答，那么可以把问题再转换到另一个数学领域中，继续下去直到它被解决为止。根据朗兰兹纲领，有一天数学家们将能够解决他们的最深奥、最难对付的问题，办法是带着这些问题周游数学王国的各个风景胜地。<br> 到了70年代，朗兰兹纲领已经成了对数学的未来的一份蓝图，但这条通向问题解答者的天堂的道路却被一个简单的事实所阻挡，即对于如何证明朗兰兹的任何一个猜想还没有人有任何切实可行的想法。这个纲领中最强有力的猜想仍然是谷山-志村猜想，但即使是对它，似乎也无法证明。<strong>谷山-志村猜想的证明将会是实现朗兰兹纲领的第一步</strong>，正因为如此，它成了现代数论中最有价值的猜想之一。<br> 尽管还是个未被证明的猜想，谷山-志村猜想依然成百次地在数学论文中被提到，这些论文探究如果它被证明那么会出现些什么结果。这些论文会以一段清楚的防止误解的说明“假定谷山-志村猜想是对的……”开始，然后接下去概要叙述对某个未解决问题的解答。当然，这些结果本身也只能是假设性的，因为它们依赖于谷山-志村猜想是对的这个前提。这些新的假设性的结果反过来又被组合进别的结果中，最后形成了大量的依赖于谷山-志村猜想的正确性的数学。这一猜想于是成了一幢新的数学大厦的基石，但是在这一猜想被证明之前这幢大厦是极其脆弱的。</p></blockquote></li></ol><h2 id="第六章-秘密的计算"><a href="#第六章-秘密的计算" class="headerlink" title="第六章 秘密的计算"></a>第六章 秘密的计算</h2><ol><li><p>一个高超的问题解答者必须具备两种不协调的素质—— <strong>永不安分的想象和极具耐心的执拗</strong>。<br>——霍华德·W.伊夫斯</p></li><li><p>（埃瓦里斯特·伽罗瓦，群论创始者，数学思想不被理解，后期从政，死于决斗）他最担心的一件事是，他的已被科学院拒绝过的研究成果会永远消失。他彻夜工作，写出了所有的定理，绝望地试图使它们得到承认，他相信这些定理全面地阐明了有关五次方程的疑难之处。</p></li><li><p>当伽罗瓦绝望地试图在致命时刻（必死的决斗到来之前）到来之前把一切都写下来时，曾出现过担心自己可能来不及完成这项任务的念头。在这一页的左下部分的两行的末端可以看到 <strong>‘je n’ ai pas le temps’ （我没有时间了）</strong> 的字样。<br><img src="https://pic2.zhimg.com/v2-613891f5aa735dbdab2e352d8c2ed765_r.jpg"><br> 一位世界上最杰出的数学家在他20岁时被杀死了，他研究数学才只有5年。</p></li></ol><h2 id="第八章-大统一数学"><a href="#第八章-大统一数学" class="headerlink" title="第八章 大统一数学"></a>第八章 大统一数学</h2><ol><li><p>在怀尔斯经受严峻考验的8年中，他实际上汇集了20世纪数论中所有的突破性工作，并把它们融合成一个万能的证明。他创造了全新的数学技术，并将它们和传统的技术以人们从未考虑过的方式结合起来。通过这样的做法，他开辟了处理为数众多的其他问题的新思路。按照肯·里贝特的说法，这个证明是现代数学的完美综合，并将对未来产生影响</p></li><li><p>补充哥德巴赫猜想：哥德巴赫问欧拉是否他能证明每个偶数可以分解成两个质数之和<strong>中国数学家陈景润于1966年证明了“每个大偶数都是一个质数及一个不超过两个质数的乘积之和”，这是迄今在哥德巴赫猜想方面最好的结果。</strong></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 阅读 </category>
          
          <category> 历史 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 历史 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电车难题与先秦哲学</title>
      <link href="/2023/04/22/%E5%86%99%E4%BD%9C/%E7%94%B5%E8%BD%A6%E9%9A%BE%E9%A2%98%E4%B8%8E%E5%85%88%E7%A7%A6%E5%93%B2%E5%AD%A6/"/>
      <url>/2023/04/22/%E5%86%99%E4%BD%9C/%E7%94%B5%E8%BD%A6%E9%9A%BE%E9%A2%98%E4%B8%8E%E5%85%88%E7%A7%A6%E5%93%B2%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<p>电车难题在西方讨论颇多，但在中哲中却鲜有明确提及，故想讨论一下，起名为《电车难题与先秦哲学》，源于《自然辩证法》课程中本人的一次课堂分享。本人非哲学专业，有错误请在评论区指出。</p><span id="more"></span><h1 id="电车难题简介"><a href="#电车难题简介" class="headerlink" title="电车难题简介"></a>电车难题简介</h1><p>“电车难题(Trolley Problem)”是伦理学领域最为知名的思想实验之一，其内容大致是：一个疯子把五个无辜的人绑在电车轨道上。一辆失控的电车朝他们驶来，并且片刻后就要碾压到他们。幸运的是，你可以拉一个拉杆，让电车开到另一条轨道上。然而问题在于，那个疯子在另一个电车轨道上也绑了一个人。考虑以上状况，你是否应拉拉杆？如下图所示：<br><img src="https://yuhengtech.oss-cn-hangzhou.aliyuncs.com/img/1677222571562-3b895058-9464-4121-be65-759e0f7f21ce.webp"><br>亦或是另一种表述，你是医院的一个医生，有五位病人都有一个器官损坏，这个时候医院来了一个拄着拐杖的人，但各种器官健全，此时如果杀了这个人，分了器官就能拯救五个人，此时怎么选？。情况如下图所示：<br><img src="https://yuhengtech.oss-cn-hangzhou.aliyuncs.com/img/1677222617638-a0f2589e-9042-4bbc-913e-a649f9f6082e.webp"><br>电车难题有许多衍生版本，但本质上都是在于抉择是否在一定情况下，牺牲一部分人来拯救大部分人。</p><h1 id="西方哲学对电车难题的基本分类"><a href="#西方哲学对电车难题的基本分类" class="headerlink" title="西方哲学对电车难题的基本分类"></a>西方哲学对电车难题的基本分类</h1><p>西哲对电车难题的讨论比较早，大体可以分为以下两大派别，即功利主义与道德主义，限于主题，以下略述。</p><h2 id="道德主义"><a href="#道德主义" class="headerlink" title="道德主义"></a>道德主义</h2><p>道德主义可以认为是一种行为导向的决策<br>认为在任何情况下，我们都不能牺牲一个无辜的人去救别人生命，没有人有权利去剥夺他人生命，任其自由发展，即便世界毁灭。</p><blockquote><p>看起来很好，但让我们想这样一种情况：连体婴儿问题：AB是连体婴儿，做手术只能保一个成活，不做手术两个都会死，是否应该牺牲一个拯救另一个，或者两个都放任不管直至死亡？</p></blockquote><h2 id="功利主义"><a href="#功利主义" class="headerlink" title="功利主义"></a>功利主义</h2><p>功利主义可以认为是一种结果导向的决策<br>功利主义认为为了整个社会幸福的最大化，可以允许牺牲一部分人<br>根据后果决定一种行为是否值得做，五个人大于一个人，可以允许杀人</p><blockquote><p>思考：<br>1.生命的价值是否可以比较？<br>2.如果功利主义不讲道德，例如侵略者对原居民进行器官拆解来救助自己人，这种不讲道德的功利主义与纳粹别无二致。<br>PS:在一些灾难创作中，功利主义的身影也有体现，泰坦尼克号上，老人小孩先上救生艇。小说《流浪地球》中政府根据年龄规定灾难时撤离的先后次序，结婚后的生育权由抽签决定，也是一种人类宏观迫不得已的功利主义行为</p></blockquote><h1 id="先秦哲学之起源"><a href="#先秦哲学之起源" class="headerlink" title="先秦哲学之起源"></a>先秦哲学之起源</h1><p>先秦哲学起源于周末，兴盛于春秋战国，衰微于秦汉。<br>导致先秦哲学发端的事件是“天子失官，学在四夷”</p><h2 id="天子失官，学在四夷"><a href="#天子失官，学在四夷" class="headerlink" title="天子失官，学在四夷"></a><strong>天子失官，学在四夷</strong></h2><p>春秋以前，知识文化掌握在奴隶主阶级手中，随着春秋末期社会由奴隶制转变为封建制，周王室衰微，官府任职的学者失去工作，流落到民间开办私学教育维生，促进了学术思想在更广泛的社会阶级中传播。形成了一批有知识有文化的士阶层。</p><p><strong>我们从一些史料中来看这一过程</strong>：</p><ol><li>孔子曰：吾闻之“天子失官，学在四夷”   —《左传·昭公十七年》</li></ol><blockquote><p>【释义】周天子丢失了自己的官学(政府教育)与官守（职官：一定职务的官吏）的传统，原本由天子掌握的文化学术流落到诸侯国乃至东夷、西戎、南蛮、北狄所处之地。</p></blockquote><ol start="2"><li>“天下大乱，贤圣不明，道德不一，天下多得一察焉以自好…….<strong>“道术将为天下裂”</strong>  —–《庄子•天下》</li></ol><blockquote><p>【释义】天下大乱，圣贤不开明，道德不统一，天下人各持一己之见并且以为自己是对的。…….道术(有争议，此处可代指天子之官学)将被天下所割裂。<br>前者（道术）是指能够见天地之“纯”之“美”、察古人之“全”之“备”的学问，而后者（方术）只是“不该（赅）不遍”、各执一方的片面的学问。所以，在《天下》篇作者的眼里，道术与方术不仅仅是出现的时间段上的先后关系，也不仅仅是全体与部分的关系，而是实质上有根本区别的两种概念。<br>王青.说“道术将为天下裂”【J】.管子学刊,2007(02):82-85+96.</p></blockquote><ol start="3"><li>子贡曰：<strong>“文武之道，未坠于地，在人” —《</strong>论语.子张<strong>》</strong></li></ol><blockquote><p>【释义】文王武王之道(可代指天子之官学)，未坠地消亡。(仍然)在世人之间流传。</p></blockquote><ol start="4"><li>仲尼有言,“<strong>礼失而求诸野</strong>”  —-班固《汉书·艺文志·诸子略序》</li></ol><blockquote><p>【释义】孔子说：“礼”失去了，可以到民间去找寻。这里的“礼”，包括了礼仪、礼节、文化、道德等。</p></blockquote><ol start="5"><li><strong>“圣王不作，诸侯放恣，处士横议”</strong> —《孟子·滕文公下》</li></ol><blockquote><p>【释义】（这个时代）德才超群达于至境之帝王不再产生了，诸侯放纵任性，未做过官的读书人肆意发表言论（到处键政）。</p></blockquote><blockquote><p>“处士横议”现象在战国时期十分突出。以往对横议处士身份的理解存在误差，他其实指那些有着强烈入仕愿望而尚未出仕的士人，而非隐士。处士横议与战国时期诸侯对人才的主动招揽、诸子百家自由争鸣的风气等密切相关，是时代巨变的产物。处士横议对士人精神、社会变动有过积极影响，也存在弊端。<br>蒋波.论“处士横议”【J】.西北大学学报(哲学社会科学版),2011(04):118-123.</p></blockquote><ol start="5"><li><strong>六国之时，贤才之臣，入楚楚重，出齐齐轻，为赵赵完，畔魏魏伤</strong>  ——王充《论衡·效力篇》</li></ol><blockquote><p>【释义】贤能之士一到了楚国，楚国就强大了，他们离开齐国后，齐国立马变的弱小了，当他们一心为赵国效力时，赵国的一切就变得很完善，而当他们不想为魏国出力时，魏国就会元气大伤。</p></blockquote><p>正是因为这帮贤能之才“入楚楚重，出齐齐轻”，各诸侯国为巩固自己的统治，竞相争取这批新兴知识分子的支持和帮助，允许他们自由讲学，发表各种见解，探讨各种问题，因而出现了“处士横议”的学术风气。这种自由的学术文化环境，推动了中国古代学术思想的繁荣和进步，造成了中国古代文化史上诸子蜂起、百家争鸣的时代。</p><h2 id="诸子之学盖出于王官-王官之学散为诸子百家"><a href="#诸子之学盖出于王官-王官之学散为诸子百家" class="headerlink" title="诸子之学盖出于王官 王官之学散为诸子百家"></a>诸子之学盖出于王官 王官之学散为诸子百家</h2><p>谈先秦哲学不得不谈其起源与分类，依据前文的史料来看目前主流观点认为诸子百家起源大多出于官学下移。<br>在周朝后期的几百年，王室丧失了权力，政府各部门的官吏也丧失了职位，流落各地。他们这时候就转而以私人身份开办私学教授他们的专门知识。于是他们就不再是“官”，而是私学的“师”。各个学派正是由这种官、师分离中产生出来的。<br>各大学派的起源和分类可以说是<strong>诸子之学盖出于王官 王官之学散为诸子百家</strong><br>历史上 <strong>司马谈</strong> （司马迁之父）的 <strong>《论六家要旨》</strong> 最早将各学派分为了 <strong>阴阳家、儒家、墨家、名家、法家、道家</strong> 六家<br>汉代 <strong>刘歆</strong> 在此基础上增加了 <strong>纵横家、杂家、农家、小说家</strong> 四家，小说家不入流，所以并称九流十家，并且在文章中中推测了各家由官学的起源（此部分近代争议较大，太过理想化故仅有部分可信）<br>以下是刘歆《七略》(失传)在<strong>班固 《汉书·艺文志》</strong> 中的原文：</p><blockquote><ol><li><strong>儒家者流，盖出于司徒之官</strong> ，助人君顺阴阳明教化者也。游文于六经之中，留意于仁义之际，祖述尧舜，宪章文武，宗师仲尼，以重其言，于道最为高。孔子曰：“如有所誉，其有所试。”唐虞之隆，殷周之盛，仲尼之业，已试之效者也。然惑者既失精微，而辟者又随时抑扬，违离道本，苟以哗众取宠。后进循之，是以五经乖析，儒学渐衰，此辟儒之患。</li><li><strong>道家者流，盖出于史官</strong>，历记成败存亡祸福古今之道，然后知秉要执本，清虚以自守，卑弱以自持，此君人南面之术也。合于尧之克攘，易之嗛嗛，一谦而四益，此其所长也。及放者为之，则欲绝去礼学，兼弃仁义，曰独任清虚可以为治。</li><li><strong>阴阳家者流，盖出于羲和之官</strong>，敬顺昊天，历象日月星辰，敬授民时，此其所长也。及拘者为之，则牵于禁忌，泥于小数；舍人事而任鬼神。</li><li><strong>法家者流，盖出于理官</strong>，信赏必罚，以辅礼制。易曰：“先王以明罚饬法”，此其所长也。及刻者为之，则无教化，去仁爱，专任刑法而欲以致治，至于残害至亲，伤恩薄厚。</li><li><strong>名家者流，盖出于礼官</strong>。古者名位不同，礼亦异数。孔子曰：“必也正名乎！名不正则言不顺，言不顺则事不成。”此其所长也。及譥者为之，则苟钩鈲析乱而已。</li><li><strong>墨家者流，盖出于清庙之守</strong>。茅屋采椽，是以贵俭；养三老五更，是以兼爱；选士大射，是以上贤；宗祀严父，是以右鬼；顺四时而行，是以非命；以孝视天下，是以上同：此其所长也。及蔽者为之，见俭之利，因以非礼，推兼爱之意，而不知别亲疏。</li><li><strong>纵横家者流，盖出于行人之官</strong>。孔子曰：“诵诗三百，使于四方，不能专对，虽多亦奚以为？”又曰：“使乎，使乎！”言其当权事制宜，受命而不受辞，此其所长也。及邪人为之，则上诈谖而弃其信。</li><li><strong>杂家者流，盖出于议官</strong>。兼儒、墨，合名、法，知国体之有此，见王治之无不贯，此其所长也。及荡者为之，则漫羡而无所归心。</li><li><strong>农家者流，盖出于农稷之官</strong>。播百谷，劝耕桑，以足衣食，故八政一曰食，二曰货。孔子曰：“所重民食”，此其所长也。及鄙者为之，以为无所事圣王，欲使君臣并耕，悖上下之序。</li><li><strong>小说家者流，盖出于稗官</strong>。街谈巷语，道听途说者之所造也。孔子曰：“虽小道，必有可观者焉，致远恐泥，是以君子弗为也。”然亦弗灭也。闾里小知者之所及，亦使缀而不忘。如或一言可采，此亦刍荛狂夫之议也。</li></ol></blockquote><p>——西汉 刘歆《七略》  东汉 班固《汉书·艺文志》收录</p><p>虽然春秋时期的规模浩大的学术下移已是共识，但诸子的起源的争辩近代中哲学者至今尚未统一，本文依冯友兰之观点，以刘歆为主，认为诸子未必皆出于官，也可有由士产生。</p><p>目前一些论文认为，先秦过于久远，部分内容可能由当时 <strong>儒士想象</strong> 而来，即：“司马谈’六家’之论力图并合残片，虽对汉代诸子学之建立不无显功，然已属汉人追忆构拟之谱系。”</p><blockquote><p>”西汉之后，儒生学士于燔书孑遗之间，得睹先秦故书，遥想当时盛况，遂有《淮南子·要略》、司马谈《论六家要旨》，分门别派，总结述论。 <strong>不过时移世易，景、武之世已非列国分峙，诸子之学亦散为碎珠。司马谈“六家”之论力图并合残片，虽对汉代诸子学之建立不无显功，然已属汉人追忆构拟之谱系。</strong><br>近代以来，“诸子出于王官”说受到胡适、傅斯年等人的猛烈冲击，而维护者如章太炎、吕思勉，修订者如刘师培、钱穆、冯友兰等”<br>邓骏捷.“诸子出于王官”说与汉家学术话语【J】.中国社会科学,2017(09):184-204+209.</p></blockquote><p>以下是近代中哲学者对“诸子出于王官”学说的态度：<br><img src="https://yuhengtech.oss-cn-hangzhou.aliyuncs.com/img/1677317624129-a5c80b48-8c41-4d05-8d5d-b640f88cce00.png" alt="“诸子出于王官”说胡适、傅斯年反对，章太炎、吕思勉赞成，刘师培、钱穆、冯友兰修订”"></p><h1 id="从先秦哲学看电车难题"><a href="#从先秦哲学看电车难题" class="headerlink" title="从先秦哲学看电车难题"></a>从先秦哲学看电车难题</h1><h2 id="墨家"><a href="#墨家" class="headerlink" title="墨家"></a>墨家</h2><p>墨家的思想总体上倾向于于功利主义，即：<strong>两害相权取其轻</strong></p><blockquote><p>“于所体之中，而权轻重之谓权。权，非为是也，非非为非也，权，正也。断指以存腕，利之中取大，害之中取小也。害之中取小也，非取害也，取利也。”——《墨子。大取》</p></blockquote><p>墨子说，为了保存手腕而断掉手指，是为了留取大的利益。所谓权衡利害，就是在利与害之间，区分谁大谁小？在面对“利”的时候，要取其中大的；在面对“害”的时候，要取其中小的。对自己有害的东西，取其小的，要认识到，非在取害，而是“取利”。</p><p>但这种功利主义并非泛泛而谈，而是论述了具体的取舍场景，例如最接近于本文主题的论述：</p><blockquote><p>死生利若，一无择也，杀一人以存天下，非杀一人以利天下也，杀己以存天下，是杀己以利天下。<br>——《墨子·大取》</p></blockquote><p>在墨家看来生与死之间的利益如何选择？<br>按照墨家的功利主义思想，在不能选择的情况下，如果杀了一个人，可以让天下存活，可以杀。但如果杀一个人让天下变得更好，则不可以。但有一种情况除外，那就是自我牺牲，如果自我牺牲能救天下或者使天下变得更好，是可以的。<br>墨子提倡自我牺牲和身先士卒的精神，以及人道主义，在九流十家中是最为勇敢和仗义的。你可以掌握你的生死，但你不应该剥夺别人的生死权，除非是不得已的时候，例如涉及文明存亡的时候。</p><h2 id="杨朱学派"><a href="#杨朱学派" class="headerlink" title="杨朱学派"></a>杨朱学派</h2><p>杨朱学派恰恰是和墨家完全相反的两面，中国哲学大抵可以分成天下为公与天下为私两派，墨子的路线是天下为公，从社会角度考虑的幸福最大化，而杨朱则是个人主义发展到极致的学说。<br>杨朱学派是战国时期的一派，在当时影响极大，有一成语：“非杨即墨”显示出了当时杨朱学派的影响力。</p><blockquote><p>“杨朱墨翟之言盈天下, <strong>天下之言,不归于杨,即归墨</strong>”。  ——《孟子.滕文公下》<br>【释义】杨朱学派和墨家是天下显学，天下人的言论不是归于杨朱就是归于墨家</p></blockquote><p>但杨朱从来没有自己写过东西，即鲁迅先生所说的“杨朱无书”，所存史料甚少，基本只能靠其他人的论述捕捉他的只言片语。正因无书近代人可能对他不是很熟悉，但一毛不拔这个成语大家一定听过：</p><blockquote><p>“杨子取为我，拔一毛而利天下，不为也”—-《孟子》<br>“不以天下大利易其胫一毛” —-《韩非子》</p></blockquote><p>在当下，一毛不拔一般用做形容词，骂人的话。<br>有人就要问了，拔一根毛救天下这么简单的事都不做，杨朱真自私，就这样还能成为显学，我看是丢人现眼罢了。<br>但真实情况是这样的吗？且看杨朱学派的孟孙阳在这方面的辩护：</p><blockquote><p>“禽子问杨朱曰：去子体之一毛，以济一世，汝为之乎？杨子曰：世固非一毛之所济。禽子曰：假济，为之乎？杨子弗应。禽子出语孟孙阳。孟孙阳曰：子不达夫子之心，吾请言之，有侵若肌肤获万金者，若为之乎？曰：为之。孟孙阳曰：有断若一节得一国，子为之乎？禽子默然有间。孟孙阳曰：<strong>一毛微于肌肤，肌肤微于一节，省矣。然则积一毛以成肌肤，积肌肤以成一节。一毛固一体万分中之一物，奈何轻之乎？</strong>”</p></blockquote><p>这是杨朱学说的详细阐释<br>杨朱比其他学派重视生命，认为如果生命牺牲了真的对社会天下国家有贡献，那再说；但牺牲而没有贡献的话，就不要白日做梦了（<strong>“世固非一毛之所济”</strong>），一根毛拯救不了世界，最多是让这世界上的一些人获利，虽然一根汗毛微小，但仍然是身体的一部分，和身体同等重要，正所谓“身体发肤，受之父母，不敢毁伤”。今日拔毛，明日可能就是断肢，再往后可能就是牺牲。人的欲望一旦开了口子就是无止境的，既得利益者会变本加厉的道德绑架，永无止境，与“升米恩，斗米仇”有一定的相似性。因此杨朱反对拔毛利天下。他认为“人人不利天下：天下治矣”。</p><p>作为学说的补充，《列子·杨朱》中描述了杨朱的理想社会：</p><blockquote><p>“古之人损一毫利天下，不与也；悉天下奉一身，不取也。人人不损一毫，人人不利天下：天下治矣。”     —《列子·杨朱》</p></blockquote><p>【释义】如果人人不损失一根毫毛（利天下人），人人不从天下人那里获取好处，那么天下就大治了。”<br>换做今天的话来说“只有先把自己过的好，才能有能力让别人也过得好”</p><p>虽然杨朱的思想与老子近似却又被庄周批判，但在中哲中我们一般认为他是道家哲学的第一阶段或者属于老子之后道家四派之一（老子与《道德经》的关系尚有争论，冯友兰认为《老子》一书是道家后学所写，所以杨朱虽然晚于老子，但是是第一个明确提出且不够完善的道家思想，故从思想完备度上来讲，杨朱应当是道家哲学的第一阶段）。</p><blockquote><p>个人认为，杨朱、老子、庄周，三人的避世思想是逐层递进的。杨朱讲个体层面的“全生避害”尽可能远离世俗；老子建立了名为“道”的本体世界，讲“顺其自然”“守弱不争”，运用自然变化的规律来使得自己“反者道之动”而后“柔弱胜刚强”化坏为好；到了庄周，讲“天地与我并生，万物与我为一”的天人合一思想，此时道家哲学本体论大成，万物与我并生于道，而道不可道，即为高于现实层面的本体界，此时，更像是从另一个世界看这人世间，自然的完成了避。</p></blockquote><p>杨朱认为，任何无辜的个体的利益都不能伤害，不可能杀一保五。<br>但另外五个也是无辜的不能杀。<br>可能会放弃选择，追随老子的选择“春秋末年，天下大乱，老子弃官，骑青牛西行，归隐老君山”。</p><h2 id="儒家"><a href="#儒家" class="headerlink" title="儒家"></a>儒家</h2><p>儒家讲究一个仁义，无论如何杀人自然是不仁义的：</p><blockquote><p>孟子：“行一不义，杀一不辜，而得天下，皆不为也”。—《孟子·公孙丑上》<br>【译文】如果要他们干一件不义的事情，杀一个无辜的人而让他们得到天下，他们都是不愿去干的</p></blockquote><blockquote><p>孟子：“杀一无罪，非仁也”   —-《孟子·尽心上》<br>【释义】无辜杀害一个无罪的人，都属于不仁的行为。</p></blockquote><p>对于极端利己的杨朱和极端利他的墨子，孟子直接开骂：</p><blockquote><p>杨氏为我，是无君也；墨氏兼爱，是无父也。无父无君，是禽兽也。<br> —–《孟子.滕文公》</p></blockquote><p>杨朱的学说是反对仁义的，因为仁义的本质是利他，而杨朱的原则是利己。但是墨子的兼爱，目的也是利他，甚至是极端利他主义。那么，孟子在他的批判中，为什么把墨子和杨朱混在一起批评？主要原因是儒家认为爱有差等。</p><blockquote><p>巫马子谓子墨子曰：‘我与子异。我不能兼爱。我爱邹人于越人，爱鲁人于邹人，爱我乡人于鲁人，爱我家人于乡人，爱我亲于我家人，爱我身于吾亲，以为近我也。 —-《墨子·耕柱》</p></blockquote><blockquote><p>“……..其不可得变革者则有矣： <strong>亲亲也，尊尊也，长长也…….</strong> ”<br>——-《礼记·大传》<br>【释义】不能随着朝代的更迭而随意改变的，那就是:同族相亲，尊祖敬宗，幼而敬长….</p></blockquote><p>儒家的亲亲尊尊思想以伦常为中心，所讲在贵贱、尊卑、长幼、亲疏有别。<br>显然：儒家仁义也是讲究尊卑有别，长幼有序</p><p>《孟子·梁惠王上》中曾记载一个动物的例子，有一次齐宣王看见<strong>一头牛</strong>被人牵去做牺牲，他“不忍其觳觫，若无罪而就死地”，因而命令<strong>用羊替换它</strong>。于是孟子对宣王说，这就是他的“<strong>不忍人之心</strong>”的例子，只要他能够把它推广到人事上，他就是行王道。<br>儒家可能会考虑铁轨上的人的社会地位以及人际关系，这种基于自我感觉的关系将人的价值量化，或者单纯的根据自己对一方的恻隐之心来决定。（回答前面提出的问题：人的价值是否可以比较）<br>在电车难题中选择干掉一个或者干掉五个，对儒家来说，都不算完美，但在必须选择的情况下。因为不同的儒士心中有不同的仁的排列秩序，所以选择也不尽相同，所以向左或者向右都有可能，取决于内心。</p><h1 id="破局者"><a href="#破局者" class="headerlink" title="破局者"></a>破局者</h1><p>在前面我们论述了三家的哲学，留一个思考题：在这个看似是死局的问题下，哪一家最有可能跳出这个怪圈，打破局势呢？</p><p><img src="https://yuhengtech.oss-cn-hangzhou.aliyuncs.com/img/1677225996304-da6693cc-be12-422d-8c9f-b9f4eb8565ab.jpeg"></p><p>私以为是墨家</p><p>墨家内部纪律严明，且有一定的军事实力（可能起源于民间武装集团）。基于信念为了非攻而奋斗，且不仅仅是“著书立说”一样纸上谈兵，在那个年代真的会派墨家弟子去维和，有一定的实干能力。所以墨家有可能会打破僵局，杀掉造成这一困境的敌人，拯救天下苍生。</p><h2 id="墨家起源考究"><a href="#墨家起源考究" class="headerlink" title="墨家起源考究"></a>墨家起源考究</h2><p>（此章节引用自冯友兰中国哲学简史）<br>墨家可能是起源于民间武装集团。在周代，天子、诸侯、封建主都有他们的军事专家。当时军队的骨干，由世袭的武士组成。随着周代后期封建制度的解体，这些武士专家丧失了爵位，流散各地，谁雇佣他们就为谁服务，以此为生。这种人被称为“游侠”，《史记》说他们“其言必信，其行必果，已诺必诚，不爱其躯，赴士之厄困”（《游侠列传》）。这些都是他们的职业道德。大部分的墨学就是这种道德的发挥。<br>在中国历史上，儒和侠都源出于依附贵族“家”的专家，他们本身都是上层阶级的分子。到了后来，儒仍然大都出身于上层或中层阶级；而侠则不然，更多的是出身于下层阶级。在古代，礼乐之类的社会活动完全限于贵族；所以从平民的观点看来，礼乐之类都是奢侈品，毫无实用价值。墨子和墨家，正是从这个观点，来批判传统制度及其辩护者孔子和儒家。这种批判，加上对他们本阶级的职业道德的发挥和辩护，就构成墨家哲学的核心。<br>墨子及其门徒出身于侠，这个论断有充分的证据。从《墨子》以及同时代的其他文献，我们知道，墨者组成一个能够进行军事行动的团体，纪律极为严格。这个团体的首领称为“钜子”，对于所有成员具有决定生死的权威。墨子就是这个团体的第一任钜子，他领导门徒实际进行的军事行动至少有一次，就是宋国受到邻国楚国侵略威胁的时候，他们为宋国准备了军事防御。<br>墨子与普通的游侠有两点不同。第一点，普通的游侠只要得到酬谢，或是受到封建主的恩惠，那就不论什么仗他们都打；墨子及其门徒，他们强烈反对侵略战争，所以他们只愿意参加严格限于自卫的战争。第二点，普通的游侠只限于信守职业道德的条规，无所发挥；可是墨子却详细阐明了这种职业道德，论证它是合理的、正当的。这样，墨子的社会背景虽然是侠，却同时成为一个新学派的创建人。</p><h2 id="军事实力与非攻政策"><a href="#军事实力与非攻政策" class="headerlink" title="军事实力与非攻政策"></a>军事实力与非攻政策</h2><p>墨家主张抵制侵略，维护和平，为其他被侵略的国家提供防御支持。<br>《公输》曾记述了鲁人墨子出使楚国，用自己的智慧说服楚国工匠公输盘和楚国国王放弃意欲侵略宋国的企图，其语言水平和用心精巧为世人所共慕。</p><blockquote><p>公输盘九设攻城之机变，子墨子九距之。公输盘之攻械尽，子墨子之守圉（yù）有余<br> 子墨子曰：“公输子之意不过欲杀臣。杀臣，宋莫能守，乃可攻也。然臣之弟子禽滑厘等三百人，已持臣守圉之器，在宋城上而待楚寇矣。虽杀臣，不能绝也。”<br>———《墨子··公输》</p></blockquote><blockquote><p>“墨子服役者百八十人，皆可使赴火蹈刃，死不还踵。”意思是：<br>墨子的学生有180人，他们都是不避艰险、奋不顾身、至死也不会回头的人物。  《淮南子·泰族训》</p></blockquote><h2 id="内部纪律严明"><a href="#内部纪律严明" class="headerlink" title="内部纪律严明"></a>内部纪律严明</h2><p>国有国法，家有家规，墨家自然也有内部纪律，墨者生活勤俭，纪律严苛，司马谈评价曰“墨者俭而难遵，是以其事不可遍循”。 《吕氏春秋》记载曾有墨家领袖的儿子杀人，秦惠王念其老来得子，赐免死。但墨家领袖依然按墨法“杀人者死，伤人者刑”处死自己儿子，内部纪律严苛到这种程度，其实蛮接近于雏形的军纪了。<br>史料记载：</p><blockquote><p>墨者有钜子腹䵍，居秦，其子杀人，秦惠王曰：“先生之年长矣，非有他子也，寡人已令吏弗诛矣，先生之以此听寡人也。”腹䵍对曰：“墨者之法曰：‘杀人者死，伤人者刑。’此所以禁杀伤人也。夫禁杀伤人者，天下之大义也。王虽为之赐，而令吏弗诛，腹䵍不可不行墨子之法。”不许惠王，而遂杀之。子，人之所私也。忍所私以行大义，钜子可谓公矣。<br>——《吕氏春秋·去私》<br>【释义】墨家有个领袖叫腹䵍，住在秦国，他儿子杀人，秦惠王说：“先生年纪大了，没有其他儿子，我已经命令官吏不要杀他，先生这件事你就听我的吧。”腹䵍回答说：“墨家的准则说：‘杀人的人死，伤人的人被判刑。’这正是禁止杀人伤人的。禁止杀人伤人是天下的大义。大王即使赐我儿子活命，命令官吏不要杀他，我不能不坚持墨家的准则。”没答应惠王，于是杀了他儿子。儿子，是人们所偏爱的了；忍心割去自已所偏爱的而推行大义，腹䵍可称得上大公无私了。</p></blockquote><h2 id="科学技术的贡献"><a href="#科学技术的贡献" class="headerlink" title="科学技术的贡献"></a>科学技术的贡献</h2><p>后期墨家在早期科学技术和逻辑学上探索了很多，可以认为是中国科技的发源地，主要论述见《墨经》。另外一个科技起源可能是道教为追求长生“炼丹”对化学的贡献（西方则是炼金术）。</p><p>以下引用自百度百科：</p><blockquote><p>《墨经》是中国战国时期<a href="https://baike.baidu.com/item/%E5%90%8E%E6%9C%9F%E5%A2%A8%E5%AE%B6/12580813?fromModule=lemma_inlink">后期墨家</a>的著作。指今本《<a href="https://baike.baidu.com/item/%E5%A2%A8%E5%AD%90/1852149?fromModule=lemma_inlink">墨子</a>》中的《经上》﹑《经下》﹐《经说上》﹑《经说下》﹐《大取》﹑《小取》 6篇﹔《墨经》亦称《<a href="https://baike.baidu.com/item/%E5%A2%A8%E8%BE%A9/3355458?fromModule=lemma_inlink">墨辩</a>》﹐主要是讨论<a href="https://baike.baidu.com/item/%E8%AE%A4%E8%AF%86%E8%AE%BA/15082508?fromModule=lemma_inlink">认识论</a>﹑逻辑和自然科学的问题。<br>早在2300多年前，我国古代思想家<a href="https://baike.baidu.com/item/%E5%A2%A8%E5%AD%90/245?fromModule=lemma_inlink">墨子</a>的《墨经》中就包含了丰富的关于力学、光学、<a href="https://baike.baidu.com/item/%E5%87%A0%E4%BD%95%E5%AD%A6/342546?fromModule=lemma_inlink">几何学</a>、工程<a href="https://baike.baidu.com/item/%E6%8A%80%E6%9C%AF%E7%9F%A5%E8%AF%86/807870?fromModule=lemma_inlink">技术知识</a>和<a href="https://baike.baidu.com/item/%E7%8E%B0%E4%BB%A3%E7%89%A9%E7%90%86%E5%AD%A6/5347658?fromModule=lemma_inlink">现代物理学</a>、数学的基本要素。《墨经》中有关于力、<a href="https://baike.baidu.com/item/%E5%8A%9B%E7%B3%BB/5888623?fromModule=lemma_inlink">力系</a>的平衡和杠杆、<a href="https://baike.baidu.com/item/%E6%96%9C%E9%9D%A2/67331?fromModule=lemma_inlink">斜面</a>等<a href="https://baike.baidu.com/item/%E7%AE%80%E5%8D%95%E6%9C%BA%E6%A2%B0/1536368?fromModule=lemma_inlink">简单机械</a>的论述，记载了关于小孔成象和<a href="https://baike.baidu.com/item/%E5%B9%B3%E9%9D%A2%E9%95%9C/10996203?fromModule=lemma_inlink">平面镜</a>、<a href="https://baike.baidu.com/item/%E5%87%B9%E9%9D%A2%E9%95%9C/2330063?fromModule=lemma_inlink">凹面镜</a>、<a href="https://baike.baidu.com/item/%E5%87%B8%E9%9D%A2%E9%95%9C/8959085?fromModule=lemma_inlink">凸面镜</a>成象的观察研究，首先提概念以及朴素的时间（“久”，即宙）和空间（“宇”）的概念。<br>《墨经》约完成于周安王14年 <a href="https://baike.baidu.com/item/%E7%99%B8%E5%B7%B3/4135119?fromModule=lemma_inlink">癸巳</a>（公元前388年）。《墨经》，又称《墨辩》。《墨子》的一部分。包括《经》上下，《<a href="https://baike.baidu.com/item/%E7%BB%8F%E8%AF%B4/367898?fromModule=lemma_inlink">经说</a>》上下，《<a href="https://baike.baidu.com/item/%E5%A4%A7%E5%8F%96/4834674?fromModule=lemma_inlink">大取</a>》、《<a href="https://baike.baidu.com/item/%E5%B0%8F%E5%8F%96/4835018?fromModule=lemma_inlink">小取</a>》六篇。一说仅包括前四篇。其主要内容为认识论、<a href="https://baike.baidu.com/item/%E9%80%BB%E8%BE%91%E5%AD%A6/85559?fromModule=lemma_inlink">逻辑学</a>，将知识分为“闻知”、“说知”、“亲知”，强调“名实合”；提出“辟”、“侔”、“援”、“推”等<a href="https://baike.baidu.com/item/%E9%80%BB%E8%BE%91%E8%8C%83%E7%95%B4/3488675?fromModule=lemma_inlink">逻辑范畴</a>；对<a href="https://baike.baidu.com/item/%E6%83%A0%E6%96%BD/204999?fromModule=lemma_inlink">惠施</a>、<a href="https://baike.baidu.com/item/%E5%85%AC%E5%AD%99%E9%BE%99/171340?fromModule=lemma_inlink">公孙龙</a>、<a href="https://baike.baidu.com/item/%E5%BA%84%E5%AD%90/8074?fromModule=lemma_inlink">庄子</a>的<a href="https://baike.baidu.com/item/%E5%90%8D%E5%AD%A6/6847444?fromModule=lemma_inlink">名学</a>观点进行了批评总结。此外还涉及数学、光学、力学、心理学、经济学等内容，是对<a href="https://baike.baidu.com/item/%E5%85%88%E7%A7%A6/919698?fromModule=lemma_inlink">先秦</a>时代科学成就的重要记录。有晋鲁胜注，早佚。《晋书·隐逸传》仅存其《墨辩序》。清<a href="https://baike.baidu.com/item/%E6%AF%95%E6%B2%85/1057902?fromModule=lemma_inlink">毕沅</a>、张惠言、<a href="https://baike.baidu.com/item/%E5%AD%99%E8%AF%92%E8%AE%A9/118926?fromModule=lemma_inlink">孙诒让</a>作过整理校释，另有<a href="https://baike.baidu.com/item/%E6%A2%81%E5%90%AF%E8%B6%85/119077?fromModule=lemma_inlink">梁启超</a>《<a href="https://baike.baidu.com/item/%E5%A2%A8%E7%BB%8F%E6%A0%A1%E9%87%8A/2412070?fromModule=lemma_inlink">墨经校释</a>》、<a href="https://baike.baidu.com/item/%E8%B0%AD%E6%88%92%E7%94%AB/10319163?fromModule=lemma_inlink">谭戒甫</a>《<a href="https://baike.baidu.com/item/%E5%A2%A8%E8%BE%A9%E5%8F%91%E5%BE%AE/9495276?fromModule=lemma_inlink">墨辩发微</a>》、<a href="https://baike.baidu.com/item/%E9%AB%98%E4%BA%A8/119659?fromModule=lemma_inlink">高亨</a>《墨经校释》。</p></blockquote><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>以易中天对百家争鸣的总结结尾：</p><p>重读诸子歌并注  易中天<br>武王伐纣开基业，周公摄政德治国。<br>亲疏嫡庶次第封，乐统和同礼辨别。<br>未料君恩五世泽，礼坏乐崩天下裂。<br>兄弟相逢弯弓月，郊原遍洒男儿血。<br>纷纷诸子来献策，老子冷峻孟子热。<br>墨护草根杨爱身，孔慕商周庄梦蝶。<br>荀卿解蔽终难结，天下滔滔人恻恻。<br>始皇一剑定乾坤，商韩简在帝王侧。<br>汉武尊儒罢百家，唐宗宋祖继相接。<br>……..后略</p><blockquote><p>注：<br>    武王伐纣开基业：武王领导的革命战争及其胜利，不但意味着一个政权替代了另一个政权，更意味着一种文化替代了另一种文化，一种制度替代了另一种制度。中华文化的基础，其实主要是周人奠定的。<br>    周公摄政德治国：周公的施政纲领，可以概括为“以人为本，以德治国”。<br>    亲疏嫡庶次第封，乐统和同礼辨别：周公创立的政治制度，是宗法、封建、礼乐的“三位一体”。宗法制分亲疏嫡庶，封建制行封土建国，礼乐制讲乐统和同，礼辨异别。<br>    未料君恩五世泽：《孟子》云“君子之泽，五世而斩”。<br>    礼坏乐崩天下裂：《论语》云“三年不为礼，礼必坏；三年不为乐，乐必崩”。<br>    兄弟相逢弯弓月，郊原遍洒男儿血：毛泽东《贺新郎·读史》云“上疆场彼此弯弓月，流遍了，郊原血”。<br>    纷纷诸子来献策：先秦诸子百家争鸣系因解决当时问题而起。<br>    老子冷峻孟子热：老子尚无为，冷静理智；孟子讲仁义，古道热肠。<br>    墨护草根杨爱身：墨子关心劳动人民，杨朱维护个人权益。<br>    孔慕商周庄梦蝶：孔子主张克己复礼，谓之“吾从周”；庄子主张真实自由的生活，谓之“逍遥游”。<br>    荀卿解蔽终难结：《荀子》一书有《解蔽》《非十二子》等篇，意欲终结百家争鸣。<br>    天下滔滔人恻恻：《论语》云“滔滔者天下皆是也，而谁与易之”。<br>    始皇一剑定乾坤，商韩简在帝王侧：秦兼天下，系实行商鞅、韩非之主张，后又以法家学说为国家意识形态。<br>    汉武尊儒罢百家，唐宗宋祖继相接：此述汉武帝罢黜百家独尊儒术，及隋唐后之科举制，从此百家争鸣不复存在矣！</p></blockquote><p>借着课程的机会整理完这个课题，实感酣畅淋漓，现实中无人交流，总觉得写出来就不憋得慌了，其实想再写一篇文论述各家鬼神观与城隍信仰或者再往前追述看看夏商周的历史，但是时间不够，日后再谈。</p>]]></content>
      
      
      <categories>
          
          <category> 写作 </category>
          
          <category> 哲学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 中哲 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>天津中继台频率</title>
      <link href="/2023/04/21/%E6%97%A0%E7%BA%BF%E7%94%B5/%E5%A4%A9%E6%B4%A5%E4%B8%AD%E7%BB%A7%E5%8F%B0%E9%A2%91%E7%8E%87/"/>
      <url>/2023/04/21/%E6%97%A0%E7%BA%BF%E7%94%B5/%E5%A4%A9%E6%B4%A5%E4%B8%AD%E7%BB%A7%E5%8F%B0%E9%A2%91%E7%8E%87/</url>
      
        <content type="html"><![CDATA[<p>收集的一些天津中继台频率，中继资源珍贵，请珍惜使用</p><span id="more"></span><h1 id="天津无线电协会模拟中继"><a href="#天津无线电协会模拟中继" class="headerlink" title="天津无线电协会模拟中继"></a>天津无线电协会模拟中继</h1><table><thead><tr><th align="center">名称</th><th align="center">频率</th><th align="center">频差</th><th align="center">亚音</th></tr></thead><tbody><tr><td align="center">市区中继站</td><td align="center">439.950</td><td align="center">-5</td><td align="center">118.8</td></tr><tr><td align="center">武清中继站</td><td align="center">438.525</td><td align="center">-5</td><td align="center">88.5</td></tr><tr><td align="center">应急中继站</td><td align="center">438.525</td><td align="center">-5</td><td align="center">88.5</td></tr><tr><td align="center">蓟州中继站</td><td align="center">438.825</td><td align="center">-5</td><td align="center">88.5</td></tr><tr><td align="center">宝坻中继站</td><td align="center">439.800</td><td align="center">-5</td><td align="center">88.5</td></tr></tbody></table><h1 id="非协会模拟中继"><a href="#非协会模拟中继" class="headerlink" title="非协会模拟中继"></a>非协会模拟中继</h1><table><thead><tr><th align="center">名称</th><th align="center">频率</th><th align="center">频差</th><th align="center">亚音</th></tr></thead><tbody><tr><td align="center">津南BH3APK中继台</td><td align="center">439.050</td><td align="center">-7</td><td align="center">94.8</td></tr><tr><td align="center">万新街中继台</td><td align="center">439.725</td><td align="center">-9</td><td align="center">88.5</td></tr><tr><td align="center">滨海应急中继台</td><td align="center">436.31</td><td align="center">-5</td><td align="center">103.5</td></tr><tr><td align="center">好青年中继台</td><td align="center">438.865</td><td align="center">-8</td><td align="center">107.2</td></tr><tr><td align="center">至尚公社中继台</td><td align="center">439.775</td><td align="center">-5</td><td align="center">88.5</td></tr><tr><td align="center">天津车友会中继台</td><td align="center">438.25</td><td align="center">-5.3</td><td align="center">88.5</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 无线电 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 无线电 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KNN实现</title>
      <link href="/2023/04/21/%E7%A7%91%E7%A0%94/%E4%BB%A3%E7%A0%81/KNN%E5%AE%9E%E7%8E%B0/"/>
      <url>/2023/04/21/%E7%A7%91%E7%A0%94/%E4%BB%A3%E7%A0%81/KNN%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>KNN代码实现</p><span id="more"></span><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding = utf8</span></span><br><span class="line"><span class="comment"># 加载knn</span></span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> neighbors</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">creat_datasets</span>():</span><br><span class="line">    datasets = np.array([[<span class="number">8</span>, <span class="number">4</span>, <span class="number">2</span>],</span><br><span class="line">                         [<span class="number">7</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">                         [<span class="number">1</span>, <span class="number">4</span>, <span class="number">4</span>],</span><br><span class="line">                         [<span class="number">3</span>, <span class="number">0</span>, <span class="number">5</span>],</span><br><span class="line">                         [<span class="number">9</span>, <span class="number">4</span>, <span class="number">2</span>],</span><br><span class="line">                         [<span class="number">7</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">                         [<span class="number">1</span>, <span class="number">5</span>, <span class="number">4</span>],</span><br><span class="line">                         [<span class="number">4</span>, <span class="number">0</span>, <span class="number">5</span>]</span><br><span class="line">                        ])</span><br><span class="line">    label = [<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">return</span> datasets, label</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">knn_sklearn_predict</span>():</span><br><span class="line">    <span class="comment">#调用KNN</span></span><br><span class="line">    knn = neighbors.KNeighborsClassifier()</span><br><span class="line">    <span class="comment">#加载数据集</span></span><br><span class="line">    dataset,label = creat_datasets()</span><br><span class="line">    <span class="comment">#传入数据</span></span><br><span class="line">    knn.fit(dataset,label)</span><br><span class="line">    <span class="comment">#预测</span></span><br><span class="line">    result = knn.predict([[<span class="number">2</span>,<span class="number">4</span>,<span class="number">0</span>]])</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;非常热&#x27;</span><span class="keyword">if</span> result[<span class="number">0</span>]==<span class="number">0</span> <span class="keyword">else</span> <span class="string">&#x27;一般热&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    knn_sklearn_predict()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">creat_datasets</span>():</span><br><span class="line">    datasets = np.array([[<span class="number">8</span>, <span class="number">4</span>, <span class="number">2</span>],</span><br><span class="line">                         [<span class="number">7</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">                         [<span class="number">1</span>, <span class="number">4</span>, <span class="number">4</span>],</span><br><span class="line">                         [<span class="number">3</span>, <span class="number">0</span>, <span class="number">5</span>]])</span><br><span class="line">    label = [<span class="string">&#x27;very hot&#x27;</span>, <span class="string">&#x27;very hot&#x27;</span>, <span class="string">&#x27;hot&#x27;</span>, <span class="string">&#x27;hot&#x27;</span>]</span><br><span class="line">    <span class="keyword">return</span> datasets, label</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">analyze_data_plot</span>(<span class="params">x, y</span>):</span><br><span class="line">    fig = plt.figure()</span><br><span class="line">    ax = fig.add_subplot(<span class="number">111</span>)</span><br><span class="line">    ax.scatter(x, y)</span><br><span class="line"></span><br><span class="line">    plt.title(<span class="string">&#x27;test title&#x27;</span>)</span><br><span class="line">    plt.xlabel(<span class="string">&#x27;icecream&#x27;</span>)</span><br><span class="line">    plt.ylabel(<span class="string">&#x27;drink water&#x27;</span>)</span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">computeEuclideanDistance</span>(<span class="params">x1, y1, x2, y2</span>):</span><br><span class="line">    <span class="keyword">return</span> math.sqrt(math.<span class="built_in">pow</span>((x1 - x2), <span class="number">2</span>) + math.<span class="built_in">pow</span>((y1 - y2), <span class="number">2</span>))</span><br><span class="line">    <span class="comment">#二维</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 多维</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">computeEuclideanDistance2</span>(<span class="params">arr1, arr2, length</span>):</span><br><span class="line">    d = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(length):</span><br><span class="line">        d += math.<span class="built_in">pow</span>(arr1[i] - arr2[i], <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> math.sqrt(d)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#矩阵</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">computeEuclideanDistance3</span>(<span class="params">newV,dataSet</span>):</span><br><span class="line">    <span class="comment">#获取形状</span></span><br><span class="line">    rowSize, colSize = dataSet.shape</span><br><span class="line">    <span class="comment">#各特征向量间做差</span></span><br><span class="line">    diffMat = np.tile(newV,(rowSize,<span class="number">1</span>))-dataSet</span><br><span class="line">    <span class="comment">#计算欧式距离的步骤平方</span></span><br><span class="line">    sq2 = diffMat**<span class="number">2</span></span><br><span class="line">    <span class="comment">#求合并开方</span></span><br><span class="line">    <span class="keyword">return</span> (sq2.<span class="built_in">sum</span>(axis=<span class="number">1</span>)**<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">knn_Classifier</span>(<span class="params">newV, datasets, label, topk</span>):</span><br><span class="line">    <span class="keyword">import</span> operator</span><br><span class="line">    <span class="comment"># 1.计算新数据和样本数据之间的距离</span></span><br><span class="line">    dist = computeEuclideanDistance3(newV,datasets)</span><br><span class="line">    <span class="comment"># 2.根据距离进行排序</span></span><br><span class="line">    sortedDistIndexs = dist.argsort(axis=<span class="number">0</span>)</span><br><span class="line">    <span class="comment">#print(sortedDistIndexs)</span></span><br><span class="line">    <span class="comment"># 3.针对topk统计类别进行排序。</span></span><br><span class="line">    disCount = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(topk):</span><br><span class="line">        votelabel = label[sortedDistIndexs[i]]</span><br><span class="line">        <span class="comment">#print(sortedDistIndexs[i], votelabel)</span></span><br><span class="line">        disCount[votelabel] = disCount.get(votelabel,<span class="number">0</span>)+<span class="number">1</span></span><br><span class="line">        <span class="comment">#可以拆成disCount.get(votelabel,0)-&gt;disCount[votelabel]=0</span></span><br><span class="line">        <span class="comment">#disCount[votelabel]=disCount[votelabel]+1</span></span><br><span class="line">        <span class="comment"># 这里着重讲一下第4行代码：cou[i] = cou.get(i, 0) + 1</span></span><br><span class="line">        <span class="comment"># 第行代码从逻辑上讲执行了两次，而这两次里get语句每次执行时的功能是不一样的：</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment"># 第一次：cou[i] = cou.get(i, 0) + 1（i =‘aa’）</span></span><br><span class="line">        <span class="comment"># 此时get语句的功能为赋初值，即把键’aa’的初值置为0然后加1</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment"># 第二次：cou[i] = cou.get(i, 0) + 1（i =‘aa’）</span></span><br><span class="line">        <span class="comment"># 因get语句已经作为赋值语句出现过一次了，因此此时再执行这条语句时，赋值功能已经无效了，也就是get语句里第二个参数对’aa’这个键已经无效了，此时get语句的功能为文章内的第一大部分所介绍的功能，所以这条语句此时可等价为</span></span><br><span class="line">        <span class="comment"># cou[i] = cou.get(i) + 1</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment"># 即</span></span><br><span class="line">        <span class="comment"># cou[i] = cou[i] + 1</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#print(disCount)</span></span><br><span class="line">        <span class="comment">#从大到小排序</span></span><br><span class="line">    sortedDisCount = <span class="built_in">sorted</span>(disCount.items(),key=operator.itemgetter(<span class="number">1</span>),reverse=<span class="literal">True</span>)</span><br><span class="line">    <span class="comment">#print(&#x27;result:&#x27;,sortedDisCount[0][0])</span></span><br><span class="line">    <span class="keyword">return</span> sortedDisCount[<span class="number">0</span>][<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">predict</span>():</span><br><span class="line">    dataset,label = creat_datasets()</span><br><span class="line">    newV=[<span class="number">2</span>,<span class="number">4</span>,<span class="number">4</span>]</span><br><span class="line">    a = <span class="built_in">float</span>(<span class="built_in">input</span>())</span><br><span class="line">    b = <span class="built_in">float</span>(<span class="built_in">input</span>())</span><br><span class="line">    c = <span class="built_in">float</span>(<span class="built_in">input</span>())</span><br><span class="line">    newV2=[a,b,c]</span><br><span class="line">    result = knn_Classifier(newV2,dataset,label,<span class="number">3</span>)</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># datasets, label = creat_datasets()</span></span><br><span class="line">    <span class="comment"># print(datasets, &#x27;\n&#x27;, label)</span></span><br><span class="line">    <span class="comment"># analyze_data_plot(datasets[:, 0], datasets[:, 1])</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># # 计算欧式距离</span></span><br><span class="line">    <span class="comment"># d = computeEuclideanDistance(2, 4, 8, 2)</span></span><br><span class="line">    <span class="comment"># print(&#x27;eu1:&#x27;,d)</span></span><br><span class="line">    <span class="comment"># d2 = computeEuclideanDistance2([2,4,4],[7,1,1],3)</span></span><br><span class="line">    <span class="comment"># print(&#x27;eu2:&#x27;,d2)</span></span><br><span class="line">    <span class="comment"># d3 = computeEuclideanDistance3([2,4,4],datasets)</span></span><br><span class="line">    <span class="comment"># print(&#x27;eu3:&#x27;, d3)</span></span><br><span class="line">    <span class="comment"># # knn</span></span><br><span class="line">    <span class="comment"># newV = [2, 4, 0]</span></span><br><span class="line">    <span class="comment"># knn=knn_Classifier(newV, datasets, label, 3)</span></span><br><span class="line">    <span class="comment"># print(&#x27;knn_result&#x27;, knn)</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># vecs = np.array([[2,4,4],[3,0,0],[5,7,2]])</span></span><br><span class="line">    <span class="comment"># for v in vecs:</span></span><br><span class="line">    <span class="comment">#     print(&#x27;3 knn_result:&#x27;,knn_Classifier(v,datasets,label,3))</span></span><br><span class="line">    predict()<span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">    <span class="keyword">import</span> matplotlib</span><br><span class="line">    <span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">    <span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">creat_datasets</span>():</span><br><span class="line">    datasets = np.array([[<span class="number">8</span>, <span class="number">4</span>, <span class="number">2</span>],</span><br><span class="line">    [<span class="number">7</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">4</span>, <span class="number">4</span>],</span><br><span class="line">    [<span class="number">3</span>, <span class="number">0</span>, <span class="number">5</span>]])</span><br><span class="line">    label = [<span class="string">&#x27;very hot&#x27;</span>, <span class="string">&#x27;very hot&#x27;</span>, <span class="string">&#x27;hot&#x27;</span>, <span class="string">&#x27;hot&#x27;</span>]</span><br><span class="line">    <span class="keyword">return</span> datasets, label</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">analyze_data_plot</span>(<span class="params">x, y</span>):</span><br><span class="line">    fig = plt.figure()</span><br><span class="line">    ax = fig.add_subplot(<span class="number">111</span>)</span><br><span class="line">    ax.scatter(x, y)</span><br><span class="line"></span><br><span class="line">    plt.title(<span class="string">&#x27;test title&#x27;</span>)</span><br><span class="line">    plt.xlabel(<span class="string">&#x27;icecream&#x27;</span>)</span><br><span class="line">    plt.ylabel(<span class="string">&#x27;drink water&#x27;</span>)</span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">computeEuclideanDistance</span>(<span class="params">x1, y1, x2, y2</span>):</span><br><span class="line">    <span class="keyword">return</span> math.sqrt(math.<span class="built_in">pow</span>((x1 - x2), <span class="number">2</span>) + math.<span class="built_in">pow</span>((y1 - y2), <span class="number">2</span>))</span><br><span class="line">    <span class="comment">#二维</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 多维</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">computeEuclideanDistance2</span>(<span class="params">arr1, arr2, length</span>):</span><br><span class="line">    d = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(length):</span><br><span class="line">    d += math.<span class="built_in">pow</span>(arr1[i] - arr2[i], <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> math.sqrt(d)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#矩阵</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">computeEuclideanDistance3</span>(<span class="params">newV,dataSet</span>):</span><br><span class="line">    <span class="comment">#获取形状</span></span><br><span class="line">    rowSize, colSize = dataSet.shape</span><br><span class="line">    <span class="comment">#各特征向量间做差</span></span><br><span class="line">    diffMat = np.tile(newV,(rowSize,<span class="number">1</span>))-dataSet</span><br><span class="line">    <span class="comment">#计算欧式距离的步骤平方</span></span><br><span class="line">    sq2 = diffMat**<span class="number">2</span></span><br><span class="line">    <span class="comment">#求合并开方</span></span><br><span class="line">    <span class="keyword">return</span> (sq2.<span class="built_in">sum</span>(axis=<span class="number">1</span>)**<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">knn_Classifier</span>(<span class="params">newV, datasets, label, topk</span>):</span><br><span class="line">    <span class="keyword">import</span> operator</span><br><span class="line">    <span class="comment"># 1.计算新数据和样本数据之间的距离</span></span><br><span class="line">    dist = computeEuclideanDistance3(newV,datasets)</span><br><span class="line">    <span class="comment"># 2.根据距离进行排序</span></span><br><span class="line">    sortedDistIndexs = dist.argsort(axis=<span class="number">0</span>)</span><br><span class="line">    <span class="comment">#print(sortedDistIndexs)</span></span><br><span class="line">    <span class="comment"># 3.针对topk统计类别进行排序。</span></span><br><span class="line">    disCount = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(topk):</span><br><span class="line">    votelabel = label[sortedDistIndexs[i]]</span><br><span class="line">    <span class="comment">#print(sortedDistIndexs[i], votelabel)</span></span><br><span class="line">    disCount[votelabel] = disCount.get(votelabel,<span class="number">0</span>)+<span class="number">1</span></span><br><span class="line">    <span class="comment">#可以拆成disCount.get(votelabel,0)-&gt;disCount[votelabel]=0</span></span><br><span class="line">    <span class="comment">#disCount[votelabel]=disCount[votelabel]+1</span></span><br><span class="line">    <span class="comment"># 这里着重讲一下第4行代码：cou[i] = cou.get(i, 0) + 1</span></span><br><span class="line">    <span class="comment"># 第行代码从逻辑上讲执行了两次，而这两次里get语句每次执行时的功能是不一样的：</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># 第一次：cou[i] = cou.get(i, 0) + 1（i =‘aa’）</span></span><br><span class="line">    <span class="comment"># 此时get语句的功能为赋初值，即把键’aa’的初值置为0然后加1</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># 第二次：cou[i] = cou.get(i, 0) + 1（i =‘aa’）</span></span><br><span class="line">    <span class="comment"># 因get语句已经作为赋值语句出现过一次了，因此此时再执行这条语句时，赋值功能已经无效了，也就是get语句里第二个参数对’aa’这个键已经无效了，此时get语句的功能为文章内的第一大部分所介绍的功能，所以这条语句此时可等价为</span></span><br><span class="line">    <span class="comment"># cou[i] = cou.get(i) + 1</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># 即</span></span><br><span class="line">    <span class="comment"># cou[i] = cou[i] + 1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#print(disCount)</span></span><br><span class="line">    <span class="comment">#从大到小排序</span></span><br><span class="line">    sortedDisCount = <span class="built_in">sorted</span>(disCount.items(),key=operator.itemgetter(<span class="number">1</span>),reverse=<span class="literal">True</span>)</span><br><span class="line">    <span class="comment">#print(&#x27;result:&#x27;,sortedDisCount[0][0])</span></span><br><span class="line">    <span class="keyword">return</span> sortedDisCount[<span class="number">0</span>][<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">predict</span>():</span><br><span class="line">    dataset,label = creat_datasets()</span><br><span class="line">    newV=[<span class="number">2</span>,<span class="number">4</span>,<span class="number">4</span>]</span><br><span class="line">    a = <span class="built_in">float</span>(<span class="built_in">input</span>())</span><br><span class="line">    b = <span class="built_in">float</span>(<span class="built_in">input</span>())</span><br><span class="line">    c = <span class="built_in">float</span>(<span class="built_in">input</span>())</span><br><span class="line">    newV2=[a,b,c]</span><br><span class="line">    result = knn_Classifier(newV2,dataset,label,<span class="number">3</span>)</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># datasets, label = creat_datasets()</span></span><br><span class="line">    <span class="comment"># print(datasets, &#x27;\n&#x27;, label)</span></span><br><span class="line">    <span class="comment"># analyze_data_plot(datasets[:, 0], datasets[:, 1])</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># # 计算欧式距离</span></span><br><span class="line">    <span class="comment"># d = computeEuclideanDistance(2, 4, 8, 2)</span></span><br><span class="line">    <span class="comment"># print(&#x27;eu1:&#x27;,d)</span></span><br><span class="line">    <span class="comment"># d2 = computeEuclideanDistance2([2,4,4],[7,1,1],3)</span></span><br><span class="line">    <span class="comment"># print(&#x27;eu2:&#x27;,d2)</span></span><br><span class="line">    <span class="comment"># d3 = computeEuclideanDistance3([2,4,4],datasets)</span></span><br><span class="line">    <span class="comment"># print(&#x27;eu3:&#x27;, d3)</span></span><br><span class="line">    <span class="comment"># # knn</span></span><br><span class="line">    <span class="comment"># newV = [2, 4, 0]</span></span><br><span class="line">    <span class="comment"># knn=knn_Classifier(newV, datasets, label, 3)</span></span><br><span class="line">    <span class="comment"># print(&#x27;knn_result&#x27;, knn)</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># vecs = np.array([[2,4,4],[3,0,0],[5,7,2]])</span></span><br><span class="line">    <span class="comment"># for v in vecs:</span></span><br><span class="line">    <span class="comment">#     print(&#x27;3 knn_result:&#x27;,knn_Classifier(v,datasets,label,3))</span></span><br><span class="line">    predict()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 科研 </category>
          
          <category> 代码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jupyter notebook添加python虚拟环境</title>
      <link href="/2023/04/21/%E6%8A%80%E6%9C%AF/jupyternotebook%E6%B7%BB%E5%8A%A0%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/"/>
      <url>/2023/04/21/%E6%8A%80%E6%9C%AF/jupyternotebook%E6%B7%BB%E5%8A%A0%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<p>将虚拟环境的python解释器添加到jupyter notebook的内核</p><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">print(&#x27;he&#x27;)</span><br><span class="line">cmd进入虚拟环境（torch_env）</span><br><span class="line">activate torch_env</span><br><span class="line">pip install ipykernel ipython</span><br><span class="line">ipython kernel install --user --name torch_env</span><br><span class="line">再次进入jupyter notebook</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux命令备忘</title>
      <link href="/2023/04/21/%E6%8A%80%E6%9C%AF/linux/"/>
      <url>/2023/04/21/%E6%8A%80%E6%9C%AF/linux/</url>
      
        <content type="html"><![CDATA[<p>一些常见命令</p><span id="more"></span><h4 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h4><p>useradd -d 目录 -m -s &#x2F;bin&#x2F;bash</p><h4 id="远端服务器本地端口映射转发"><a href="#远端服务器本地端口映射转发" class="headerlink" title="远端服务器本地端口映射转发"></a>远端服务器本地端口映射转发</h4><p>ssh转发指令  ssh -L 16006:127.0.0.1:6006 username@ip</p><h4 id="跨设备文件复制"><a href="#跨设备文件复制" class="headerlink" title="跨设备文件复制"></a>跨设备文件复制</h4><p>scp &#x2F;内容 user@ip &#x2F;目录</p><h4 id="linux任务挂后台"><a href="#linux任务挂后台" class="headerlink" title="linux任务挂后台"></a>linux任务挂后台</h4><p>screen -S test<br>ctrl+a+d 切入后台<br>screen -ls 列出所有<br>screen -r test 重新连接<br>screen -wipe 会话清除</p><blockquote><p>如果由于某种原因其中一个会话死掉了（例如人为杀掉该会话），这时screen -list会显示该会话为dead状态。使用screen -wipe命令清除</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《禅与摩托车维修艺术》——罗伯特·M·波西格</title>
      <link href="/2023/04/21/%E8%AF%BB%E4%B9%A6/%E7%A6%85%E4%B8%8E%E6%91%A9%E6%89%98%E8%BD%A6%E7%BB%B4%E4%BF%AE%E8%89%BA%E6%9C%AF/"/>
      <url>/2023/04/21/%E8%AF%BB%E4%B9%A6/%E7%A6%85%E4%B8%8E%E6%91%A9%E6%89%98%E8%BD%A6%E7%BB%B4%E4%BF%AE%E8%89%BA%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://yuhengtech.oss-cn-hangzhou.aliyuncs.com/img/20230501101908.png" alt="20230501101908"></p><h3 id="罗伯特·M·波西格"><a href="#罗伯特·M·波西格" class="headerlink" title="罗伯特·M·波西格"></a>罗伯特·M·波西格</h3><ol><li><p>他说：“你相信鬼吗？”我说：“不相信。”“为什么？”“因为他们没有科学依据。”我的答案不禁让约翰笑了起来，我接着说：“他们的存在不占用任何空间，也没有能量，因此根据科学定理，他们只存在于人的心中。”这个时候，酒精、倦意和微风纠缠于我心中，一起影响着我，我又说道：“当然，科学定理也不占用任何空间，也没有能量，因此也只存在于人的心中，所以完全科学的态度就是既不相信鬼，也不相信科学，这样你就安全了。然而这样一来，你就没有多少可以相信的了，但是唯有这样才是科学的态度。”</p><span id="more"></span></li><li><p>“而科学家所面临的矛盾是心。心既非物，也没有能量，但是他们并不能否认心存在于他们所做的一切之中。逻辑存在于心中，数字也只存在于心中。如果科学家认为鬼也只存在于人的心里，我不会反对这种说法。其中‘只’是一个关键词，科学只存在于你的心里，这种说法并没有错，鬼也是一样。”</p></li><li><p>他不了解发生了什么事，而且也没有兴趣去研究。他对事情的表象比较感兴趣，对于内涵就不然了。这一点很重要，因为这就是他看事情的方法。我花了好长的时间才发现我们之间的这种不同，所以在这次旅程当中，很重要的一件事就是要明确这种不同。<br>我从理智、知识的角度去看修理把手的问题，其中牵涉到金属的所有科学上的特性。而约翰却从直觉和当下的角度去看待它。我是从内涵着手，而他却是从物的表象开始。我看到的是这个铝片的意义，而他看到的却是这个铝片的外观。</p></li><li><p>古典的认知认为这个世界是由一些基本形式组成的，而浪漫的认知则是从它的表象来观察。如果你拿一部发动机或是机械图，或是电子仪表给浪漫的人看，他一定不感兴趣，因为他所看到的只是表象，枯燥无味，只是列出一大堆复杂的专有名词、线条和数字，没有让他觉得有趣的事。但是如果你把这些东西拿给一个偏向古典思想的人看，他会仔细地观察，然后就会着迷，因为他看到在这些线条和符号之后是丰富的基本形式。浪漫的模式主要有丰富的灵感、想象力、创造力和直觉。最主要的是情感而非事实。和科学相对的艺术往往就是很浪漫的，它的存在不依赖于理性或是法则，而是依赖于感情、直觉和美学。在北欧的文化当中，浪漫往往和女性有关，但这并不是必然的现象。相对的，古典的思想往往依赖于理性和法则–它们是思想和行为的基本形式，在欧洲的文化当中主要与男性有关，同时科学、法律、医药等各学科都受到了古典思想的影响，因此对大部分的女性来说毫无吸引力。所以虽然骑摩托车旅行是件很浪漫的事，但是要维修、保养摩托车却全然是古典的行为。修理车子的时候，必然会弄脏手，而且全身都是油污，这些基本形式往往和浪漫的精神相冲突，因而女性很不喜欢这样。虽然在古典的认知方式当中，它的表象通常是丑陋的，但是这不是天生的。浪漫的人往往会忽略古典的美感，因为它出现得非常微妙。古典的风格往往直截了当而且完全不加修饰，不情绪化，简洁，有严谨的比例，它的目的并不是要引发别人情绪上的波动，而是要从混乱中找出秩序，所以它的风格并不自由也不自然，反而要求的是规规矩矩，所有的一切都在控制之下，而它的价值标准在于控制技巧的高低。对于一个浪漫的人来说，这种古典的方式往往显得很沉闷，呆滞而且丑陋。就像保养车子一样，车子的一切都可以分解成零部件和它们之间的关系。所有的一切都必须经过测量和证明，这就给人一种沉重的压迫感，一种永无止尽的灰暗，这就是一股死亡的势力。然而对于一个古典的人来说，浪漫的人就很轻浮而没有理性，心情起伏不定，不值得信任，只对享乐感兴趣，是一种肤浅的人，就像寄生虫一样没有内涵，无法养活自己，是社会的负担。从这里我们就差不多可以看出他们彼此之间的冲突了。这就是问题的根源，人在思考和感觉的时候往往会偏向于某一种形式，而且会误解和看轻另一种形式。然而没有人会放弃自己所看到的真理，就我所知，目前还没有人可以真正融合两者，因为这两者之间根本就找不到交会点。所以在近代古典和浪漫的文化之间，产生了严重的冲突–这两个世界逐渐分离，互相仇视，所有的人都在怀疑是否要继续这样发展下去。事实上没有人希望如此–不论他的敌手如何想。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 阅读 </category>
          
          <category> 哲学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 哲学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>村上春树选摘</title>
      <link href="/2023/04/21/%E8%AF%BB%E4%B9%A6/%E6%9D%91%E4%B8%8A%E6%98%A5%E6%A0%91/"/>
      <url>/2023/04/21/%E8%AF%BB%E4%B9%A6/%E6%9D%91%E4%B8%8A%E6%98%A5%E6%A0%91/</url>
      
        <content type="html"><![CDATA[<p>1、哪里会有人喜欢孤独，不过是不喜欢失望罢了。<br>——《挪威的森林》</p><span id="more"></span><p>2、鱼说，你看不到我眼中的泪，因为我在水中。水说，我能感觉到你的泪，因为你在我心中。<br>——《鱼和水的爱恋》</p><p>3、白昼之光，岂知夜色之深。<br>——《且听风吟》</p><p>4、孤独一人也没关系，只要能发自内心地爱着一个人，人生就会有救。哪怕不能和他生活在一起。<br>——《1Q84》</p><p>5、我一直以为人是慢慢变老的，其实不是，人是一瞬间变老的。<br>——《舞！舞！舞！》</p><p>6、你要做一个不动声色的大人了，不准情绪化，不准偷偷想念，不住回头看。去过自己另外的生活，你要听话，不是所有的鱼都会生活在同一片海里。<br>——《舞！舞！舞！》</p><p>7、不要同情自己，同情自己是卑劣懦夫干的勾当。<br>——《挪威的森林》</p><p>8、年龄一大，相信的东西就越来越少。和牙齿磨损一个样。既非玩世不恭，又不是疑神疑鬼，只是磨损而已。<br>——《世界尽头与冷酷仙境》</p><p>9、所谓人生，无非是一个不断丧失的过程。很宝贵的东西，会一个接一个，像梳子豁了齿一样，从你手中滑落。取而代之落入你手中的，全是些不值一提的伪劣品。体能，希望，美梦和理想，信念和意义，或你所爱的人，一样接着一样，一人接着一人，从你身旁悄然消逝。<br>——《1Q84》</p><p>10、刚刚好，看见你幸福的样子，于是幸福着你的幸福。<br>——《国境以南太阳以西》</p><p>11、对相爱的人来说，对方的心才是最好的房子。<br>——村上春树</p><p>12、在某种情况下，一个人的存在本身就要伤害另一个人。<br>——《国境以南太阳以西》</p><p>13、或许我的心包有一层硬壳，能破壳而入的东西是极其有限的。所以我才不能对人一往情深。<br>—— 《挪威的森林》</p><p>14、在我们寻找，伤害，背离之后，还能一如既往地相信爱情，这是一种勇气。<br>——《挪威的森林》</p><p>15、我的人生是我的，你的人生是你的。只要你清楚自己在寻求什么，那就尽管按自己的意愿去生活。别人怎么说与你无关。<br>——《舞！舞！舞！》</p><p>16、每个人都有属于自己的一片森林，也许我们 从来不曾去过，但它一直在那里，总会在那里。迷失的人迷失了，相逢的人会再相逢。<br>——《挪威的森林》</p><p>17、如果你掉进了黑暗里，你能做的，不过是静心等待，直到你的双眼适应黑暗。<br>——《挪威的森林》</p><p>18、违背了自己定下的原则，哪怕只有一次，以后就将违背更多的原则。<br>——《当我谈跑步时我谈些什么》</p><p>19、平庸这东西犹如白衬衣上的污痕，一旦染上便永远洗不掉，无可挽回。<br>——《舞！舞！舞！》</p><p>20、尽管眼下十分困难，但日后必定会开花结果。<br>——《我的职业是小说家》</p><p>21、我们领教了世界是何等凶顽，同时又得知世界也可以变得温存和美好。<br>——《海边的卡夫卡》</p><p>22、不存在十全十美的文章，如同不存在彻头彻尾的绝望。<br>——《且听风吟》</p><p>23、你要记得那些黑暗中默默抱紧你的人，逗你笑的人，陪你彻夜聊天的人，坐车来看望你的人，陪你哭过的人，在医院陪你的人，总是以你为重的人，带着你四处游荡的人， 说想念你的人。是这些人组成你生命中一点一滴的温暖 ，是这些温暖使你远离阴霾， 是这些温暖使你成为善良的人。<br>——村上春树</p><p>24、不必太纠结于当下，也不必太忧虑未来，当你经历过一些事情的时候，眼前的风景已经和从前不一样了。<br>——《1Q84》</p><p>25、总之岁月漫长，然而值得等待。<br>——《如果我们的语言是威士忌》</p>]]></content>
      
      
      <categories>
          
          <category> 阅读 </category>
          
          <category> 文学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>死亡诗社</title>
      <link href="/2023/04/21/%E8%AF%BB%E4%B9%A6/%E6%AD%BB%E4%BA%A1%E8%AF%97%E7%A4%BE/"/>
      <url>/2023/04/21/%E8%AF%BB%E4%B9%A6/%E6%AD%BB%E4%BA%A1%E8%AF%97%E7%A4%BE/</url>
      
        <content type="html"><![CDATA[<ol><li><p>我们读诗写诗，并不是因为它好玩<br>我们读诗写诗是因为我们是人类的一分子<br>而人类是充满激情的<br>没错，医学，法律，商业，工程，这些都是崇高的追求，足以支撑人的一生<br>但诗歌<br>美丽、浪漫、爱<br>这些才是我们生活的意义</p><span id="more"></span></li><li><p>“现在，过来看看墙上的照片。<br>你们可能从这里走过很多次，但都没有仔细看过他们吧”。<br>“他们跟你们没什么差别，对吧？一样的发型，一样的野心勃勃，相信世界在自己手中，相信会成就一番大事业”。<br>“现在他们都变成了尘土，但是仔细听，你还能听见他们的忠告”。<br>“珍惜时间，让你的生命不同寻常”。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 阅读 </category>
          
          <category> 文学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>碎语</title>
      <link href="/2023/04/21/%E8%AF%BB%E4%B9%A6/%E7%A2%8E%E8%AF%AD/"/>
      <url>/2023/04/21/%E8%AF%BB%E4%B9%A6/%E7%A2%8E%E8%AF%AD/</url>
      
        <content type="html"><![CDATA[<ol><li><p>学术生活就是一场疯狂的赌博。学者们既不知道什么时候灵感降临，也不知道什么时候会被他们的科学职业丢弃，只能把自己的才华交付给运气。数学研究符合这场赌博的一切特征。</p><p align="right">——韦伯《科学作为天职》</font></p><span id="more"></span></li><li><p>我常想在纷扰中寻出一点闲静来，然而委实不容易。目前是这么离奇，心里是这么芜杂。一个人做到只剩了回忆的时候，生涯大概总要算是无聊了罢，但有时竟会连回忆也没有。</p></li><li><p>虫蛆也许是不干净的，但它们并没有自鸣清高；鸷禽猛兽以较弱的动物为饵，不妨说是凶残的罢，但它们从来就没有竖过“公理”“正义”的旗子，使牺牲者直到被吃的时候为止，还是一味佩服赞叹它们。</p><p align="right">——鲁迅《朝花夕拾》</font></p></li><li><p>创作一部动画也就是创造一个虚拟的世界，这个世界慰藉着那些失去勇气的、与残忍现实搏斗的灵魂。</p></li><li><p>残忍与温柔自以一种毫不冲突的方式并存在这个世上，这种现实主义不会一味地迎合观众的口味，而是让观众们毫不畏惧地去面对自己的存在。</p></li><li><p>共情来自观众在故事人物身上投射的情感，而现实是对我们人生不可预测性的真实描写。</p><p align="right">——某篇描写宫崎骏动画的文章</font></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 阅读 </category>
          
          <category> 文学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python知识补全</title>
      <link href="/2023/04/20/%E6%8A%80%E6%9C%AF/python%E7%9F%A5%E8%AF%86%E8%A1%A5%E5%85%A8/"/>
      <url>/2023/04/20/%E6%8A%80%E6%9C%AF/python%E7%9F%A5%E8%AF%86%E8%A1%A5%E5%85%A8/</url>
      
        <content type="html"><![CDATA[<p>一些易忘知识点</p><span id="more"></span><h1 id="list-extend"><a href="#list-extend" class="headerlink" title="list.extend()"></a>list.extend()</h1><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>extend() 函数用于在列表末尾一次性追加另一个序列中的多个值（用新列表扩展原来的列表）。</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><p>extend()方法语法：<br>list.extend(seq)</p><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><ul><li>seq – 元素列表。</li></ul><h2 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h2><p>该方法没有返回值，但会在已存在的列表中添加新的列表内容。</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>以下实例展示了 extend()函数的使用方法：<br>#!&#x2F;usr&#x2F;bin&#x2F;python aList &#x3D; [123, ‘xyz’, ‘zara’, ‘abc’, 123]; bList &#x3D; [2009, ‘manni’]; aList.extend(bList) print “Extended List : “, aList ;<br>以上实例输出结果如下：<br>Extended List :  [123, ‘xyz’, ‘zara’, ‘abc’, 123, 2009, ‘manni’]</p><h1 id="numpy-tile"><a href="#numpy-tile" class="headerlink" title="numpy.tile()"></a>numpy.tile()</h1><p>numpy.tile()是个什么函数呢，说白了，就是把数组沿各个方向复制</p><p>比如 a &#x3D; np.array([0,1,2]),    np.tile(a,(2,1))就是把a先沿x轴（就这样称呼吧）复制1倍，即没有复制，仍然是 [0,1,2]。 再把结果沿y方向复制2倍，即最终得到</p><p> array([[0,1,2],<br>           [0,1,2]])</p><h1 id="列表去重"><a href="#列表去重" class="headerlink" title="列表去重"></a>列表去重</h1><p>list(set([a,a,a,b,b,c]))</p><h1 id="collections-Counter"><a href="#collections-Counter" class="headerlink" title="collections.Counter()"></a>collections.Counter()</h1><p>可以快速统计词频。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#统计词频</span></span><br><span class="line">colors = [<span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;blue&#x27;</span>, <span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;green&#x27;</span>, <span class="string">&#x27;blue&#x27;</span>, <span class="string">&#x27;blue&#x27;</span>]</span><br><span class="line">result = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> color <span class="keyword">in</span> colors:</span><br><span class="line">    <span class="keyword">if</span> result.get(color)==<span class="literal">None</span>:</span><br><span class="line">        result[color]=<span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        result[color]+=<span class="number">1</span></span><br><span class="line"><span class="built_in">print</span> (result)</span><br><span class="line"><span class="comment">#&#123;&#x27;red&#x27;: 2, &#x27;blue&#x27;: 3, &#x27;green&#x27;: 1&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line">colors = [<span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;blue&#x27;</span>, <span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;green&#x27;</span>, <span class="string">&#x27;blue&#x27;</span>, <span class="string">&#x27;blue&#x27;</span>]</span><br><span class="line">c = Counter(colors)</span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">dict</span>(c))</span><br></pre></td></tr></table></figure><h1 id="1-Python基础"><a href="#1-Python基础" class="headerlink" title="1. Python基础"></a>1. <strong>Python基础</strong></h1><h2 id="字符串与编码"><a href="#字符串与编码" class="headerlink" title="字符串与编码"></a><strong>字符串与编码</strong></h2><h3 id="编码"><a href="#编码" class="headerlink" title="编码"></a><strong>编码</strong></h3><p>在最新的Python 3版本中，字符串是以Unicode编码的，也就是说，Python的字符串支持多语言，例如：</p><blockquote><blockquote><blockquote><p>print(‘包含中文的str’)<br>包含中文的str<br>对于单个字符的编码，Python提供了ord()函数获取字符的整数表示，chr()函数把编码转换为对应的字符：</p></blockquote></blockquote></blockquote><p><em>&gt;&gt;&gt; ord(‘A’)</em><br><em>65</em><br><em>&gt;&gt;&gt; ord(‘中’)</em><br><em>20013</em><br><em>&gt;&gt;&gt; chr(66)</em><br><em>‘B’</em><br><em>&gt;&gt;&gt; chr(25991)</em><br><em>‘文’</em></p><h3 id="格式化"><a href="#格式化" class="headerlink" title="格式化"></a><strong>格式化</strong></h3><p>在Python中，采用的格式化方式和C语言是一致的，用%实现，举例如下：</p><blockquote><blockquote><blockquote><p>‘Hello, %s’ % ‘world’’Hello, world’<br>‘Hi, %s, you have $%d.’ % (‘Michael’, 1000000)’Hi, Michael, you have $1000000.’<br>你如果只有一个%?，括号可以省略。<br>常见的占位符有：</p></blockquote></blockquote></blockquote><table><thead><tr><th><strong>占位符</strong></th><th><strong>替换内容</strong></th></tr></thead><tbody><tr><td>%d</td><td>整数</td></tr><tr><td>%f</td><td>浮点数</td></tr><tr><td>%s</td><td>字符串</td></tr><tr><td>%x</td><td>十六进制整数</td></tr></tbody></table><p>如果你不太确定应该用什么，%s永远起作用，它会把任何数据类型转换为字符串：</p><blockquote><blockquote><blockquote><p>‘Age: %s. Gender: %s’ % (25, True)<br>‘Age: 25. Gender: True’<br>有些时候，字符串里面的%是一个普通字符怎么办？这个时候就需要转义，用%%来表示一个%：<br>‘growth rate: %d %%’ % 7<br>‘growth rate: 7 %’</p></blockquote></blockquote></blockquote><h3 id="format"><a href="#format" class="headerlink" title="format()"></a><strong>format()</strong></h3><p>另一种格式化字符串的方法是使用字符串的format()方法，它会用传入的参数依次替换字符串内的占位符{0}、{1}……，不过这种方式写起来比%要麻烦得多：</p><blockquote><blockquote><blockquote><p>‘Hello, {0}, 成绩提升了 {1:.1f}%’.format(‘小明’, 17.125)<br>‘Hello, 小明, 成绩提升了 17.1%’</p></blockquote></blockquote></blockquote><h3 id="f-string"><a href="#f-string" class="headerlink" title="f-string"></a><strong>f-string</strong></h3><p>最后一种格式化字符串的方法是使用以f开头的字符串，称之为f-string，它和普通字符串不同之处在于，字符串如果包含{xxx}，就会以对应的变量替换：</p><blockquote><blockquote><blockquote><p>r &#x3D; 2.5&gt;&gt;&gt; s &#x3D; 3.14 * r ** 2<br>print(f’The area of a circle with radius {r} is {s:.2f}’)<br>The area of a circle <strong>with</strong> radius 2.5 <strong>is</strong> 19.62<br>上述代码中，{r}被变量r的值替换，{s:.2f}被变量s的值替换，并且:后面的.2f指定了格式化参数（即保留两位小数），因此，{s:.2f}的替换结果是19.62。</p></blockquote></blockquote></blockquote><h2 id="List-and-tuple"><a href="#List-and-tuple" class="headerlink" title="List and tuple"></a><strong>List and tuple</strong></h2><h3 id="list"><a href="#list" class="headerlink" title="list"></a><strong>list</strong></h3><p>如果要取最后一个元素，除了计算索引位置外，还可以用-1做索引，直接获取最后一个元素：</p><blockquote><blockquote><blockquote><p>classmates[-1]’Tracy’<br>list是一个可变的有序表，所以，可以往list中追加元素到末尾：<br>classmates.append(‘Adam’)<br>classmates<br>[‘Michael’, ‘Bob’, ‘Tracy’, ‘Adam’]<br>也可以把元素插入到指定的位置，比如索引号为1的位置：<br>classmates.insert(1, ‘Jack’)<br>classmates<br>[‘Michael’, ‘Jack’, ‘Bob’, ‘Tracy’, ‘Adam’]<br>要删除list末尾的元素，用pop()方法：<br>classmates.pop()<br>‘Adam’<br>classmates<br>[‘Michael’, ‘Jack’, ‘Bob’, ‘Tracy’]<br>要删除指定位置的元素，用pop(i)方法，其中i是索引位置：<br>classmates.pop(1)<br>‘Jack’<br>classmates<br>[‘Michael’, ‘Bob’, ‘Tracy’]<br>要把某个元素替换成别的元素，可以直接赋值给对应的索引位置：<br>classmates[1] &#x3D; ‘Sarah’<br>classmates<br>[‘Michael’, ‘Sarah’, ‘Tracy’]<br>list里面的元素的数据类型也可以不同，比如：<br>L &#x3D; [‘Apple’, 123, True]<br>list元素也可以是另一个list，比如：<br>s &#x3D; [‘python’, ‘java’, [‘asp’, ‘php’], ‘scheme’]<br>len(s)4<br>要注意s只有4个元素，其中s[2]又是一个list，如果拆开写就更容易理解了：<br>p &#x3D; [‘asp’, ‘php’]<br>s &#x3D; [‘python’, ‘java’, p, ‘scheme’]<br>要拿到’php’可以写p[1]或者s[2][1]，因此s可以看成是一个二维数组</p></blockquote></blockquote></blockquote><h3 id="Tuple"><a href="#Tuple" class="headerlink" title="Tuple"></a><strong>Tuple</strong></h3><p>tuple一旦初始化就不能修改，也没有append()，insert()这样的方法。其他获取元素的方法和list是一样的<br>只有1个元素的tuple定义时必须加一个逗号,，来消除歧义：</p><blockquote><blockquote><blockquote><p>t &#x3D; (1,)<br>t<br>(1,)</p></blockquote></blockquote></blockquote><h2 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a><strong>条件判断</strong></h2><p>if &lt;条件判断1&gt;:<br>&lt;执行1&gt;<br>elif &lt;条件判断2&gt;:<br>&lt;执行2&gt;<br>else:<br>&lt;执行3&gt;</p><h2 id="循环"><a href="#循环" class="headerlink" title="循环"></a><strong>循环</strong></h2><p>range能生成0到n的数列</p><p>break语句可以在循环过程中直接退出循环，而continue语句可以提前结束本轮循环，并直接开始下一轮循环。这两个语句通常都必须配合if语句使用。<br>要特别注意，不要滥用break和continue语句。break和continue会造成代码执行逻辑分叉过多，容易出错。大多数循环并不需要用到break和continue语句，上面的两个例子，都可以通过改写循环条件或者修改循环逻辑，去掉break和continue语句。</p><h2 id="dict和set"><a href="#dict和set" class="headerlink" title="dict和set"></a><strong>dict和set</strong></h2><h3 id="dict"><a href="#dict" class="headerlink" title="**dict **"></a>**dict **</h3><p>如果key不存在，dict就会报错：</p><blockquote><blockquote><blockquote><p>d[‘Thomas’]<br>Traceback (most recent call last):<br>File “<stdin>“, line 1, in <module><br>KeyError: ‘Thomas’<br>要避免key不存在的错误，有两种办法，一是通过in判断key是否存在：<br>‘Thomas’ <strong>in</strong> d<br>False<br>二是通过dict提供的get()方法，如果key不存在，可以返回None，或者自己指定的value：<br>d.get(‘Thomas’)<br>d.get(‘Thomas’, -1)<br>-1<br>注意：返回None的时候Python的交互环境不显示结果。<br>要删除一个key，用pop(key)方法，对应的value也会从dict中删除：<br>d.pop(‘Bob’)75<br>d<br>{‘Michael’: 95, ‘Tracy’: 85}</p></blockquote></blockquote></blockquote><h3 id="set"><a href="#set" class="headerlink" title="set"></a><strong>set</strong></h3><p>重复元素在set中自动被过滤：</p><blockquote><blockquote><blockquote><p>s &#x3D; set([1, 1, 2, 2, 3, 3])<br>s<br>{1, 2, 3}<br>通过add(key)方法可以添加元素到set中，可以重复添加，但不会有效果：<br>s.add(4)<br>s<br>{1, 2, 3, 4}<br>通过remove(key)方法可以删除元素：<br>s.remove(4)<br>s<br>{1, 2, 3}<br>set可以看成数学意义上的无序和无重复元素的集合，因此，两个set可以做数学意义上的交集、并集等操作：<br>s1 &#x3D; set([1, 2, 3])<br>s2 &#x3D; set([2, 3, 4])<br>s1 &amp; s2<br>{2, 3}<br>s1 | s2<br>{1, 2, 3, 4}</p></blockquote></blockquote></blockquote><h1 id="2-函数"><a href="#2-函数" class="headerlink" title="2. 函数"></a>2. <strong>函数</strong></h1><p><strong>if</strong> <strong>not</strong> isinstance(x, (int, float)):<br>isinstance可以判断A和B是否一致，或者A是否在B元组中</p><h2 id="返回多个值"><a href="#返回多个值" class="headerlink" title="返回多个值"></a><strong>返回多个值</strong></h2><p>函数可以返回多个值吗？答案是肯定的。<br>比如在游戏中经常需要从一个点移动到另一个点，给出坐标、位移和角度，就可以计算出新的坐标：<br><strong>import</strong> math<br><strong>def</strong> <strong>move</strong>(x, y, step, angle&#x3D;0):<br>nx &#x3D; x + step * math.cos(angle)<br>ny &#x3D; y - step * math.sin(angle)<br><strong>return</strong> nx, ny<br>import math语句表示导入math包，并允许后续代码引用math包里的sin、cos等函数。<br>然后，我们就可以同时获得返回值：</p><blockquote><blockquote><blockquote><p>x, y &#x3D; move(100, 100, 60, math.pi &#x2F; 6)<br>print(x, y)<br>151.96152422706632 70.0<br>但其实这只是一种假象，Python函数返回的仍然是单一值：<br>r &#x3D; move(100, 100, 60, math.pi &#x2F; 6)<br>print(r)<br>(151.96152422706632, 70.0)<br>原来返回值是一个tuple！但是，在语法上，返回一个tuple可以省略括号，而多个变量可以同时接收一个tuple，按位置赋给对应的值，所以，Python的函数返回多值其实就是返回一个tuple，但写起来更方便。</p></blockquote></blockquote></blockquote><h2 id="函数的参数"><a href="#函数的参数" class="headerlink" title="函数的参数"></a>函数的参数</h2><p>内容太多，参见</p><h3 id="默认参数"><a href="#默认参数" class="headerlink" title="默认参数"></a>默认参数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">power</span>(<span class="params">x, n=<span class="number">2</span></span>):</span><br><span class="line">    s = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> n &gt; <span class="number">0</span>:</span><br><span class="line">        n = n - <span class="number">1</span></span><br><span class="line">        s = s * x</span><br><span class="line">    <span class="keyword">return</span> s</span><br></pre></td></tr></table></figure><p>默认参数可以简化函数的调用。设置默认参数时，有几点要注意：<br>一是必选参数在前，默认参数在后，否则Python的解释器会报错（思考一下为什么默认参数不能放在必选参数前面）；<br>二是如何设置默认参数。<br>当函数有多个参数时，把变化大的参数放前面，变化小的参数放后面。变化小的参数就可以作为默认参数。<br>使用默认参数有什么好处？最大的好处是能降低调用函数的难度。</p><p>默认参数很有用，但使用不当，也会掉坑里。默认参数有个最大的坑，演示如下：<br>先定义一个函数，传入一个list，添加一个END再返回：<br>def add_end(L&#x3D;[]):<br> L.append(‘END’)<br> return L<br>当你正常调用时，结果似乎不错：</p><blockquote><blockquote><blockquote><p>add_end([1, 2, 3])<br>[1, 2, 3, ‘END’]<br>add_end([‘x’, ‘y’, ‘z’])<br>[‘x’, ‘y’, ‘z’, ‘END’]<br>当你使用默认参数调用时，一开始结果也是对的：<br>add_end()<br> [‘END’]<br>但是，再次调用add_end()时，结果就不对了：<br>add_end()<br> [‘END’, ‘END’]<br>add_end()<br>[‘END’, ‘END’, ‘END’]<br>很多初学者很疑惑，默认参数是[]，但是函数似乎每次都“记住了”上次添加了’END’后的list。<br>原因解释如下：<br>Python函数在定义的时候，默认参数L的值就被计算出来了，即[]，因为默认参数L也是一个变量，它指向对象[]，每次调用该函数，如果改变了L的内容，则下次调用时，默认参数的内容就变了，不再是函数定义时的[]了。<br> 定义默认参数要牢记一点：默认参数必须指向不变对象！<br>要修改上面的例子，我们可以用None这个不变对象来实现：</p></blockquote></blockquote></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">add_end</span>(<span class="params">L=<span class="literal">None</span></span>):    </span><br><span class="line"> <span class="keyword">if</span> L <span class="keyword">is</span> <span class="literal">None</span>:        </span><br><span class="line"> L = []     </span><br><span class="line">L.append(<span class="string">&#x27;END&#x27;</span>)    </span><br><span class="line"> <span class="keyword">return</span> L</span><br></pre></td></tr></table></figure><h3 id="可变参数"><a href="#可变参数" class="headerlink" title="可变参数"></a>可变参数</h3><p>*参数为可变参数 用来传入N个参数<br>我们把函数的参数改为可变参数：<br>def calc(<em>numbers):<br> sum &#x3D; 0<br> for n in numbers:<br>  sum &#x3D; sum + n * n     return sum<br>定义可变参数和定义一个list或tuple参数相比，仅仅在参数前面加了一个</em>号。在函数内部，参数numbers接收到的是一个tuple，因此，函数代码完全不变。但是，调用该函数时，可以传入任意个参数，包括0个参数：</p><blockquote><blockquote><blockquote><p>calc(1, 2)<br>5<br>calc()<br>0<br>如果已经有一个list或者tuple，要调用一个可变参数怎么办？可以这样做：<br>nums &#x3D; [1, 2, 3]<br>calc(nums[0], nums[1], nums[2])  14<br>这种写法当然是可行的，问题是太繁琐，所以Python允许你在list或tuple前面加一个*号，把list或tuple的元素变成可变参数传进去：<br>nums &#x3D; [1, 2, 3]<br>calc(*nums)<br>14<br>*nums表示把nums这个list的所有元素作为可变参数传进去。这种写法相当有用，而且很常见。</p></blockquote></blockquote></blockquote><h3 id="关键字参数"><a href="#关键字参数" class="headerlink" title="关键字参数"></a>关键字参数</h3><p>**参数为关键字参数，用来传入字典</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">可变参数允许你传入<span class="number">0</span>个或任意个参数，这些可变参数在函数调用时自动组装为一个<span class="built_in">tuple</span>。而关键字参数允许你传入<span class="number">0</span>个或任意个含参数名的参数，这些关键字参数在函数内部自动组装为一个<span class="built_in">dict</span>。请看示例：</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">person</span>(<span class="params">name, age, **kw</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;name:&#x27;</span>, name, <span class="string">&#x27;age:&#x27;</span>, age, <span class="string">&#x27;other:&#x27;</span>, kw)</span><br><span class="line">函数person除了必选参数name和age外，还接受关键字参数kw。在调用该函数时，可以只传入必选参数：</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>person(<span class="string">&#x27;Michael&#x27;</span>, <span class="number">30</span>)</span><br><span class="line">name: Michael age: <span class="number">30</span> other: &#123;&#125;</span><br><span class="line">也可以传入任意个数的关键字参数：</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>person(<span class="string">&#x27;Bob&#x27;</span>, <span class="number">35</span>, city=<span class="string">&#x27;Beijing&#x27;</span>)</span><br><span class="line">name: Bob age: <span class="number">35</span> other: &#123;<span class="string">&#x27;city&#x27;</span>: <span class="string">&#x27;Beijing&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>person(<span class="string">&#x27;Adam&#x27;</span>, <span class="number">45</span>, gender=<span class="string">&#x27;M&#x27;</span>, job=<span class="string">&#x27;Engineer&#x27;</span>)</span><br><span class="line">name: Adam age: <span class="number">45</span> other: &#123;<span class="string">&#x27;gender&#x27;</span>: <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;job&#x27;</span>: <span class="string">&#x27;Engineer&#x27;</span>&#125;</span><br><span class="line">关键字参数有什么用？它可以扩展函数的功能。比如，在person函数里，我们保证能接收到name和age这两个参数，但是，如果调用者愿意提供更多的参数，我们也能收到。试想你正在做一个用户注册的功能，除了用户名和年龄是必填项外，其他都是可选项，利用关键字参数来定义这个函数就能满足注册的需求。</span><br><span class="line"></span><br><span class="line">和可变参数类似，也可以先组装出一个<span class="built_in">dict</span>，然后，把该<span class="built_in">dict</span>转换为关键字参数传进去：</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>extra = &#123;<span class="string">&#x27;city&#x27;</span>: <span class="string">&#x27;Beijing&#x27;</span>, <span class="string">&#x27;job&#x27;</span>: <span class="string">&#x27;Engineer&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>person(<span class="string">&#x27;Jack&#x27;</span>, <span class="number">24</span>, city=extra[<span class="string">&#x27;city&#x27;</span>], job=extra[<span class="string">&#x27;job&#x27;</span>])</span><br><span class="line">name: Jack age: <span class="number">24</span> other: &#123;<span class="string">&#x27;city&#x27;</span>: <span class="string">&#x27;Beijing&#x27;</span>, <span class="string">&#x27;job&#x27;</span>: <span class="string">&#x27;Engineer&#x27;</span>&#125;</span><br><span class="line">当然，上面复杂的调用可以用简化的写法：</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>extra = &#123;<span class="string">&#x27;city&#x27;</span>: <span class="string">&#x27;Beijing&#x27;</span>, <span class="string">&#x27;job&#x27;</span>: <span class="string">&#x27;Engineer&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>person(<span class="string">&#x27;Jack&#x27;</span>, <span class="number">24</span>, **extra)</span><br><span class="line">name: Jack age: <span class="number">24</span> other: &#123;<span class="string">&#x27;city&#x27;</span>: <span class="string">&#x27;Beijing&#x27;</span>, <span class="string">&#x27;job&#x27;</span>: <span class="string">&#x27;Engineer&#x27;</span>&#125;</span><br><span class="line">**extra表示把extra这个<span class="built_in">dict</span>的所有key-value用关键字参数传入到函数的**kw参数，kw将获得一个<span class="built_in">dict</span>，注意kw获得的<span class="built_in">dict</span>是extra的一份拷贝，对kw的改动不会影响到函数外的extra。</span><br></pre></td></tr></table></figure><h3 id="命名关键字参数"><a href="#命名关键字参数" class="headerlink" title="命名关键字参数"></a>命名关键字参数</h3><p>对于关键字参数，函数的调用者可以传入任意不受限制的关键字参数。至于到底传入了哪些，就需要在函数内部通过kw检查。<br>仍以person()函数为例，我们希望检查是否有city和job参数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">person</span>(<span class="params">name, age, **kw</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;city&#x27;</span> <span class="keyword">in</span> kw:</span><br><span class="line">        <span class="comment"># 有city参数</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;job&#x27;</span> <span class="keyword">in</span> kw:</span><br><span class="line">        <span class="comment"># 有job参数</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;name:&#x27;</span>, name, <span class="string">&#x27;age:&#x27;</span>, age, <span class="string">&#x27;other:&#x27;</span>, kw)</span><br><span class="line"></span><br><span class="line">但是调用者仍可以传入不受限制的关键字参数：</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>person(<span class="string">&#x27;Jack&#x27;</span>, <span class="number">24</span>, city=<span class="string">&#x27;Beijing&#x27;</span>, addr=<span class="string">&#x27;Chaoyang&#x27;</span>, zipcode=<span class="number">123456</span>)</span><br><span class="line"></span><br><span class="line">如果要限制关键字参数的名字，就可以用命名关键字参数，例如，只接收city和job作为关键字参数。这种方式定义的函数如下：</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">person</span>(<span class="params">name, age, *, city, job</span>):</span><br><span class="line">    <span class="built_in">print</span>(name, age, city, job)</span><br><span class="line">和关键字参数**kw不同，命名关键字参数需要一个特殊分隔符*，*后面的参数被视为命名关键字参数。</span><br><span class="line"></span><br><span class="line">调用方式如下：</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>person(<span class="string">&#x27;Jack&#x27;</span>, <span class="number">24</span>, city=<span class="string">&#x27;Beijing&#x27;</span>, job=<span class="string">&#x27;Engineer&#x27;</span>)</span><br><span class="line">Jack <span class="number">24</span> Beijing Engineer</span><br><span class="line">如果函数定义中已经有了一个可变参数，后面跟着的命名关键字参数就不再需要一个特殊分隔符*了：</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">person</span>(<span class="params">name, age, *args, city, job</span>):</span><br><span class="line">    <span class="built_in">print</span>(name, age, args, city, job)</span><br><span class="line">命名关键字参数必须传入参数名，这和位置参数不同。如果没有传入参数名，调用将报错：</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>person(<span class="string">&#x27;Jack&#x27;</span>, <span class="number">24</span>, <span class="string">&#x27;Beijing&#x27;</span>, <span class="string">&#x27;Engineer&#x27;</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: person() missing <span class="number">2</span> required keyword-only arguments: <span class="string">&#x27;city&#x27;</span> <span class="keyword">and</span> <span class="string">&#x27;job&#x27;</span></span><br><span class="line">由于调用时缺少参数名city和job，Python解释器把前两个参数视为位置参数，后两个参数传给*args，但缺少命名关键字参数导致报错。</span><br><span class="line"></span><br><span class="line">命名关键字参数可以有缺省值，从而简化调用：</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">person</span>(<span class="params">name, age, *, city=<span class="string">&#x27;Beijing&#x27;</span>, job</span>):</span><br><span class="line">    <span class="built_in">print</span>(name, age, city, job)</span><br><span class="line">由于命名关键字参数city具有默认值，调用时，可不传入city参数：</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>person(<span class="string">&#x27;Jack&#x27;</span>, <span class="number">24</span>, job=<span class="string">&#x27;Engineer&#x27;</span>)</span><br><span class="line">Jack <span class="number">24</span> Beijing Engineer</span><br><span class="line">使用命名关键字参数时，要特别注意，如果没有可变参数，就必须加一个*作为特殊分隔符。如果缺少*，Python解释器将无法识别位置参数和命名关键字参数：</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">person</span>(<span class="params">name, age, city, job</span>):</span><br><span class="line">    <span class="comment"># 缺少 *，city和job被视为位置参数</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="参数组合"><a href="#参数组合" class="headerlink" title="参数组合"></a>参数组合</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">参数组合</span><br><span class="line">在Python中定义函数，可以用必选参数、默认参数、可变参数、关键字参数和命名关键字参数，这<span class="number">5</span>种参数都可以组合使用。但是请注意，参数定义的顺序必须是：必选参数、默认参数、可变参数、命名关键字参数和关键字参数。</span><br><span class="line"></span><br><span class="line">比如定义一个函数，包含上述若干种参数：</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">f1</span>(<span class="params">a, b, c=<span class="number">0</span>, *args, **kw</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;a =&#x27;</span>, a, <span class="string">&#x27;b =&#x27;</span>, b, <span class="string">&#x27;c =&#x27;</span>, c, <span class="string">&#x27;args =&#x27;</span>, args, <span class="string">&#x27;kw =&#x27;</span>, kw)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">f2</span>(<span class="params">a, b, c=<span class="number">0</span>, *, d, **kw</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;a =&#x27;</span>, a, <span class="string">&#x27;b =&#x27;</span>, b, <span class="string">&#x27;c =&#x27;</span>, c, <span class="string">&#x27;d =&#x27;</span>, d, <span class="string">&#x27;kw =&#x27;</span>, kw)</span><br><span class="line">在函数调用的时候，Python解释器自动按照参数位置和参数名把对应的参数传进去。</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f1(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">a = <span class="number">1</span> b = <span class="number">2</span> c = <span class="number">0</span> args = () kw = &#123;&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f1(<span class="number">1</span>, <span class="number">2</span>, c=<span class="number">3</span>)</span><br><span class="line">a = <span class="number">1</span> b = <span class="number">2</span> c = <span class="number">3</span> args = () kw = &#123;&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f1(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>)</span><br><span class="line">a = <span class="number">1</span> b = <span class="number">2</span> c = <span class="number">3</span> args = (<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>) kw = &#123;&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f1(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, x=<span class="number">99</span>)</span><br><span class="line">a = <span class="number">1</span> b = <span class="number">2</span> c = <span class="number">3</span> args = (<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>) kw = &#123;<span class="string">&#x27;x&#x27;</span>: <span class="number">99</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f2(<span class="number">1</span>, <span class="number">2</span>, d=<span class="number">99</span>, ext=<span class="literal">None</span>)</span><br><span class="line">a = <span class="number">1</span> b = <span class="number">2</span> c = <span class="number">0</span> d = <span class="number">99</span> kw = &#123;<span class="string">&#x27;ext&#x27;</span>: <span class="literal">None</span>&#125;</span><br><span class="line">最神奇的是通过一个<span class="built_in">tuple</span>和<span class="built_in">dict</span>，你也可以调用上述函数：</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>args = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>kw = &#123;<span class="string">&#x27;d&#x27;</span>: <span class="number">99</span>, <span class="string">&#x27;x&#x27;</span>: <span class="string">&#x27;#&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f1(*args, **kw)</span><br><span class="line">a = <span class="number">1</span> b = <span class="number">2</span> c = <span class="number">3</span> args = (<span class="number">4</span>,) kw = &#123;<span class="string">&#x27;d&#x27;</span>: <span class="number">99</span>, <span class="string">&#x27;x&#x27;</span>: <span class="string">&#x27;#&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>args = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>kw = &#123;<span class="string">&#x27;d&#x27;</span>: <span class="number">88</span>, <span class="string">&#x27;x&#x27;</span>: <span class="string">&#x27;#&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f2(*args, **kw)</span><br><span class="line">a = <span class="number">1</span> b = <span class="number">2</span> c = <span class="number">3</span> d = <span class="number">88</span> kw = &#123;<span class="string">&#x27;x&#x27;</span>: <span class="string">&#x27;#&#x27;</span>&#125;</span><br><span class="line">所以，对于任意函数，都可以通过类似func(*args, **kw)的形式调用它，无论它的参数是如何定义的。</span><br><span class="line"></span><br><span class="line"> 虽然可以组合多达<span class="number">5</span>种参数，但不要同时使用太多的组合，否则函数接口的可理解性很差。</span><br></pre></td></tr></table></figure><h1 id="高级语言特性"><a href="#高级语言特性" class="headerlink" title="高级语言特性"></a>高级语言特性</h1><h2 id="切片"><a href="#切片" class="headerlink" title="切片"></a>切片</h2><p><a href="https://www.liaoxuefeng.com/wiki/1016959663602400/1017269965565856">https://www.liaoxuefeng.com/wiki/1016959663602400/1017269965565856</a></p><h2 id="迭代"><a href="#迭代" class="headerlink" title="迭代"></a>迭代</h2><h2 id="列表生成式"><a href="#列表生成式" class="headerlink" title="列表生成式"></a>列表生成式</h2><h2 id="生成器"><a href="#生成器" class="headerlink" title="生成器"></a>生成器</h2><h2 id="迭代器"><a href="#迭代器" class="headerlink" title="迭代器"></a>迭代器</h2>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
